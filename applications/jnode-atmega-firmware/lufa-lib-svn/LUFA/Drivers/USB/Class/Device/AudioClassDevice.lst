   1               		.file	"AudioClassDevice.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.Audio_Device_ConfigureEndpoints,"ax",@progbits
  11               	.global	Audio_Device_ConfigureEndpoints
  13               	Audio_Device_ConfigureEndpoints:
  14               	.LFB100:
  15               		.file 1 "lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c"
   1:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** /*
   2:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****              LUFA Library
   3:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****      Copyright (C) Dean Camera, 2011.
   4:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
   5:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   dean [at] fourwalledcubicle [dot] com
   6:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****            www.lufa-lib.org
   7:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** */
   8:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
   9:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** /*
  10:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
  12:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   Permission to use, copy, modify, distribute, and sell this
  13:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   software and its documentation for any purpose is hereby granted
  14:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   without fee, provided that the above copyright notice appear in
  15:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   all copies and that both that the copyright notice and this
  16:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   permission notice and warranty disclaimer appear in supporting
  17:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   documentation, and that the name of the author not be used in
  18:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   advertising or publicity pertaining to distribution of the
  19:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   software without specific, written prior permission.
  20:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
  21:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   The author disclaim all warranties with regard to this
  22:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   software, including all implied warranties of merchantability
  23:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   and fitness.  In no event shall the author be liable for any
  24:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   special, indirect or consequential damages or any damages
  25:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   in an action of contract, negligence or other tortious action,
  27:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   arising out of or in connection with the use or performance of
  28:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c ****   this software.
  29:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** */
  30:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
  31:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** #define  __INCLUDE_FROM_USB_DRIVER
  32:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** #include "../../Core/USBMode.h"
  33:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
  34:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** #if defined(USB_CAN_BE_DEVICE)
  35:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
  36:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** #define  __INCLUDE_FROM_AUDIO_DRIVER
  37:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** #define  __INCLUDE_FROM_AUDIO_DEVICE_C
  38:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** #include "AudioClassDevice.h"
  39:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
  40:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** void Audio_Device_ProcessControlRequest(USB_ClassInfo_Audio_Device_t* const AudioInterfaceInfo)
  41:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** {
  42:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	if (!(Endpoint_IsSETUPReceived()))
  43:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	  return;
  44:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
  45:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	if ((USB_ControlRequest.bmRequestType & CONTROL_REQTYPE_RECIPIENT) == REQREC_INTERFACE)
  46:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	{
  47:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		if (USB_ControlRequest.wIndex != AudioInterfaceInfo->Config.StreamingInterfaceNumber)
  48:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		  return;
  49:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	}
  50:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	else if ((USB_ControlRequest.bmRequestType & CONTROL_REQTYPE_RECIPIENT) == REQREC_ENDPOINT)
  51:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	{
  52:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		bool EndpointFilterMatch = false;
  53:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
  54:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		EndpointFilterMatch |= (AudioInterfaceInfo->Config.DataINEndpointNumber &&
  55:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		                        ((uint8_t)USB_ControlRequest.wIndex == (ENDPOINT_DIR_IN  | AudioInterface
  56:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
  57:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		EndpointFilterMatch |= (AudioInterfaceInfo->Config.DataOUTEndpointNumber &&
  58:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		                        ((uint8_t)USB_ControlRequest.wIndex == (ENDPOINT_DIR_OUT | AudioInterface
  59:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
  60:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		if (!(EndpointFilterMatch))
  61:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		  return;
  62:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	}
  63:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
  64:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	switch (USB_ControlRequest.bRequest)
  65:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	{
  66:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		case REQ_SetInterface:
  67:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_INTERFA
  68:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			{
  69:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				Endpoint_ClearSETUP();
  70:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				Endpoint_ClearStatusStage();
  71:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
  72:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				AudioInterfaceInfo->State.InterfaceEnabled = ((USB_ControlRequest.wValue & 0xFF) != 0);
  73:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				EVENT_Audio_Device_StreamStartStop(AudioInterfaceInfo);
  74:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			}
  75:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
  76:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			break;
  77:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		case AUDIO_REQ_GetStatus:
  78:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			if ((USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE
  79:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			    (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_ENDPOINT)
  80:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			{
  81:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				Endpoint_ClearSETUP();
  82:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				Endpoint_ClearStatusStage();
  83:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			}
  84:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
  85:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			break;
  86:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		case AUDIO_REQ_SetCurrent:
  87:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		case AUDIO_REQ_SetMinimum:
  88:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		case AUDIO_REQ_SetMaximum:
  89:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		case AUDIO_REQ_SetResolution:
  90:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_ENDPOINT))
  91:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			{
  92:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				uint8_t EndpointProperty = USB_ControlRequest.bRequest;
  93:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				uint8_t EndpointAddress  = (uint8_t)USB_ControlRequest.wIndex;
  94:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				uint8_t EndpointControl  = (USB_ControlRequest.wValue >> 8);
  95:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
  96:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				if (CALLBACK_Audio_Device_GetSetEndpointProperty(AudioInterfaceInfo, EndpointProperty, Endpoint
  97:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				                                                 EndpointControl, NULL, NULL))
  98:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				{
  99:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 					uint16_t ValueLength = USB_ControlRequest.wLength;
 100:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 					uint8_t  Value[ValueLength];
 101:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
 102:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 					Endpoint_ClearSETUP();
 103:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 					Endpoint_Read_Control_Stream_LE(Value, ValueLength);
 104:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 					Endpoint_ClearIN();
 105:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
 106:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 					CALLBACK_Audio_Device_GetSetEndpointProperty(AudioInterfaceInfo, EndpointProperty, EndpointAdd
 107:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 					                                             EndpointControl, &ValueLength, Value);
 108:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				}
 109:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			}
 110:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
 111:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			break;
 112:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		case AUDIO_REQ_GetCurrent:
 113:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		case AUDIO_REQ_GetMinimum:
 114:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		case AUDIO_REQ_GetMaximum:
 115:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		case AUDIO_REQ_GetResolution:
 116:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_ENDPOINT))
 117:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			{
 118:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				uint8_t  EndpointProperty = USB_ControlRequest.bRequest;
 119:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				uint8_t  EndpointAddress  = (uint8_t)USB_ControlRequest.wIndex;
 120:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				uint8_t  EndpointControl  = (USB_ControlRequest.wValue >> 8);
 121:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				uint16_t ValueLength      = USB_ControlRequest.wLength;
 122:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				uint8_t  Value[ValueLength];
 123:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
 124:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				if (CALLBACK_Audio_Device_GetSetEndpointProperty(AudioInterfaceInfo, EndpointProperty, Endpoint
 125:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				                                                 EndpointControl, &ValueLength, Value))
 126:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				{
 127:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 					Endpoint_ClearSETUP();
 128:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 					Endpoint_Write_Control_Stream_LE(Value, ValueLength);
 129:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 					Endpoint_ClearOUT();
 130:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				}
 131:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			}
 132:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
 133:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			break;
 134:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	}
 135:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** }
 136:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
 137:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** bool Audio_Device_ConfigureEndpoints(USB_ClassInfo_Audio_Device_t* const AudioInterfaceInfo)
 138:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** {
  16               		.loc 1 138 0
  17               		.cfi_startproc
  18               	.LVL0:
  19 0000 1F93      		push r17
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 17, -2
  23 0002 CF93      		push r28
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 28, -3
  27 0004 DF93      		push r29
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 5
  30               		.cfi_offset 29, -4
  31               	/* prologue: function */
  32               	/* frame size = 0 */
  33               	/* stack size = 3 */
  34               	.L__stack_usage = 3
  35 0006 EC01      		movw r28,r24
 139:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	memset(&AudioInterfaceInfo->State, 0x00, sizeof(AudioInterfaceInfo->State));
  36               		.loc 1 139 0
  37 0008 1F82      		std Y+7,__zero_reg__
  38               	.LVL1:
 140:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
 141:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	for (uint8_t EndpointNum = 1; EndpointNum < ENDPOINT_TOTAL_ENDPOINTS; EndpointNum++)
  39               		.loc 1 141 0
  40 000a 11E0      		ldi r17,lo8(1)
  41               	.LVL2:
  42               	.L5:
  43               	.LBB28:
  44               	.LBB29:
 142:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	{
 143:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		uint16_t Size;
 144:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		uint8_t  Type;
 145:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		uint8_t  Direction;
 146:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		bool     DoubleBanked;
 147:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
 148:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		if (EndpointNum == AudioInterfaceInfo->Config.DataINEndpointNumber)
  45               		.loc 1 148 0
  46 000c 8981      		ldd r24,Y+1
  47 000e 1813      		cpse r17,r24
  48 0010 00C0      		rjmp .L2
 149:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		{
 150:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			Size         = AudioInterfaceInfo->Config.DataINEndpointSize;
  49               		.loc 1 150 0
  50 0012 6A81      		ldd r22,Y+2
  51 0014 7B81      		ldd r23,Y+3
  52               	.LVL3:
 151:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			Direction    = ENDPOINT_DIR_IN;
  53               		.loc 1 151 0
  54 0016 80E8      		ldi r24,lo8(-128)
  55 0018 00C0      		rjmp .L3
  56               	.LVL4:
  57               	.L2:
 152:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			Type         = EP_TYPE_ISOCHRONOUS;
 153:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			DoubleBanked = true;
 154:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		}
 155:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		else if (EndpointNum == AudioInterfaceInfo->Config.DataOUTEndpointNumber)
  58               		.loc 1 155 0
  59 001a 8C81      		ldd r24,Y+4
  60 001c 1817      		cp r17,r24
  61 001e 01F0      		breq .L4
  62               	.L10:
  63               	.LBE29:
 141:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	for (uint8_t EndpointNum = 1; EndpointNum < ENDPOINT_TOTAL_ENDPOINTS; EndpointNum++)
  64               		.loc 1 141 0
  65 0020 1F5F      		subi r17,lo8(-(1))
  66               	.LVL5:
  67 0022 1730      		cpi r17,lo8(7)
  68 0024 01F4      		brne .L5
 156:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		{
 157:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			Size         = AudioInterfaceInfo->Config.DataOUTEndpointSize;
 158:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			Direction    = ENDPOINT_DIR_OUT;
 159:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			Type         = EP_TYPE_ISOCHRONOUS;
 160:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			DoubleBanked = true;
 161:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		}
 162:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		else
 163:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		{
 164:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			continue;
 165:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		}
 166:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
 167:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		if (!(Endpoint_ConfigureEndpoint(EndpointNum, Type, Direction, Size,
 168:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		                                 DoubleBanked ? ENDPOINT_BANK_DOUBLE : ENDPOINT_BANK_SINGLE)))
 169:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		{
 170:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			return false;
 171:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		}
 172:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	}
 173:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
 174:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	return true;
  69               		.loc 1 174 0
  70 0026 81E0      		ldi r24,lo8(1)
  71 0028 00C0      		rjmp .L6
  72               	.LVL6:
  73               	.L4:
  74               	.LBB34:
 157:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			Size         = AudioInterfaceInfo->Config.DataOUTEndpointSize;
  75               		.loc 1 157 0
  76 002a 6D81      		ldd r22,Y+5
  77 002c 7E81      		ldd r23,Y+6
  78               	.LVL7:
 158:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			Direction    = ENDPOINT_DIR_OUT;
  79               		.loc 1 158 0
  80 002e 80E0      		ldi r24,0
  81               	.LVL8:
  82               	.L3:
  83               		.file 2 "lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2011.
   4:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaim all warranties with regard to this
  22:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
  93:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE(EPIndex)         _ENDPOINT_GET_MAXSIZE2(ENDPOINT_DETAILS_EP ## EPI
  94:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE2(EPDetails)      _ENDPOINT_GET_MAXSIZE3(EPDetails)
  95:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE3(MaxSize, Banks) (MaxSize)
  96:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  97:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS(EPIndex)           _ENDPOINT_GET_BANKS2(ENDPOINT_DETAILS_EP ## EPInd
  98:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS2(EPDetails)        _ENDPOINT_GET_BANKS3(EPDetails)
  99:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS3(MaxSize, Banks)   (Banks)
 100:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 101:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 102:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_MAXEP             7
 103:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 104:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP0               64,  1
 105:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP1               256, 2
 106:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP2               64,  2
 107:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 108:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 109:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP5               64,  2
 110:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP6               64,  2
 111:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 112:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_MAXEP             5
 113:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 114:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP0               64,  1
 115:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP1               64,  1
 116:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP2               64,  1
 117:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 118:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 119:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 120:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 121:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 122:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
 123:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
 124:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
 125:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 126:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
 127:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  84               		.loc 2 127 0
  85 0030 28E0      		ldi r18,lo8(8)
  86 0032 30E0      		ldi r19,0
 126:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  87               		.loc 2 126 0
  88 0034 40E0      		ldi r20,0
  89 0036 00C0      		rjmp .L7
  90               	.LVL9:
  91               	.L8:
  92               	.LBB30:
  93               	.LBB31:
  94               	.LBB32:
  95               	.LBB33:
 128:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 129:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 130:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 131:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
  96               		.loc 2 131 0
  97 0038 4F5F      		subi r20,lo8(-(1))
  98               	.LVL10:
 132:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
  99               		.loc 2 132 0
 100 003a 220F      		lsl r18
 101 003c 331F      		rol r19
 102               	.LVL11:
 103               	.L7:
 129:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 104               		.loc 2 129 0
 105 003e 2617      		cp r18,r22
 106 0040 3707      		cpc r19,r23
 107 0042 00F0      		brlo .L8
 133:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 134:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 135:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 108               		.loc 2 135 0
 109 0044 4295      		swap r20
 110               	.LVL12:
 111 0046 407F      		andi r20,lo8(-16)
 112               	.LBE33:
 113               	.LBE32:
 136:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 137:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 138:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 139:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 140:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 141:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 142:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 143:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 144:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 145:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 146:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 147:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 148:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** \name Endpoint Bank Mode Masks */
 149:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			//@{
 150:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 151:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  that the endpoint should have one single bank, which requires less USB FIFO memory but resul
 152:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  in slower transfers as only one USB device (the AVR or the host) can access the endpoint's
 153:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank at the one time.
 154:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 155:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANK_SINGLE                    (0 << EPBK0)
 156:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 157:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 158:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  that the endpoint should have two banks, which requires more USB FIFO memory but results
 159:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  in faster transfers as one USB device (the AVR or the host) can access one bank while the ot
 160:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  accesses the second bank.
 161:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 162:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANK_DOUBLE                    (1 << EPBK0)
 163:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			//@}
 164:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 165:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 166:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 167:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 168:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 169:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 170:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 171:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 172:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the maximum bank size in bytes of a given endpoint.
 173:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 174:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This macro will only work correctly on endpoint indexes that are compile-time constant
 175:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        defined by the preprocessor.
 176:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 177:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (\ref ENDPOINT_TOTAL_ENDPOINTS - 
 178:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 179:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_MAX_SIZE(EPIndex)              _ENDPOINT_GET_MAXSIZE(EPIndex)
 180:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 181:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the total number of banks supported by the given endpoint.
 182:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This macro will only work correctly on endpoint indexes that are compile-time constant
 184:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        defined by the preprocessor.
 185:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 186:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (\ref ENDPOINT_TOTAL_ENDPOINTS - 
 187:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 188:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANKS_SUPPORTED(EPIndex)       _ENDPOINT_GET_BANKS(EPIndex)
 189:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 190:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 191:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Total number of endpoints (including the default control endpoint at address 0) which may
 192:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 193:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 194:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 195:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            ENDPOINT_DETAILS_MAXEP
 196:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 197:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 198:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 199:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 200:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 201:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 202:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 203:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 204:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 205:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 206:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 207:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 208:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 209:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 210:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 211:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 212:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 213:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 214:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 215:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 216:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 217:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 218:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 219:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 220:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 221:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 222:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_TransmissionInProgress  = 5, /**< The bank for the USB endpoint is currently
 223:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****                                                          *   and can't be written at the moment.
 224:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 225:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 226:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 227:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 228:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 229:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint number with the given endpoint type, direction, bank size
 230:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and banking mode. Once configured, the endpoint may be read from or written to, depending
 231:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  on its direction.
 232:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 233:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Number     Endpoint number to configure. This must be more than 0 and less than
 234:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        \ref ENDPOINT_TOTAL_ENDPOINTS.
 235:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 236:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 237:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 238:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 239:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Direction  Endpoint data direction, either \ref ENDPOINT_DIR_OUT or \ref ENDPOINT
 240:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        All endpoints (except Control type) are unidirectional - data may only
 241:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        from or written to the endpoint bank based on its direction, not both.
 242:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 243:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 244:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 245:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 246:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 247:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 248:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured, an \c ENDPOI
 249:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        More banks uses more USB DPRAM, but offers better performance. Isochro
 250:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        endpoints <b>must</b> have at least two banks.
 251:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 252:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> be co
 253:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        ascending order, or bank corruption will occur.
 254:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 255:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 256:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 257:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        the chosen microcontroller model's datasheet to determine the maximum bank size for ea
 258:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 259:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 260:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 261:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 262:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 263:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 265:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 266:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 267:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 268:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 269:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 270:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 271:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Direction,
 272:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 273:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 274:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 275:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 276:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Direction,
 277:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 278:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 279:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 280:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, ((Type << EPTYPE0) | (Direction ? (1 << EPDIR) : 
 114               		.loc 2 280 0
 115 0048 4660      		ori r20,lo8(6)
 116 004a 61E0      		ldi r22,lo8(1)
 117               	.LVL13:
 118 004c 8111      		cpse r24,__zero_reg__
 119 004e 00C0      		rjmp .L9
 120 0050 60E0      		ldi r22,0
 121               	.L9:
 122 0052 6064      		ori r22,lo8(64)
 123 0054 812F      		mov r24,r17
 124               	.LVL14:
 125 0056 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 126               	.LVL15:
 127               	.LBE31:
 128               	.LBE30:
 167:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		if (!(Endpoint_ConfigureEndpoint(EndpointNum, Type, Direction, Size,
 129               		.loc 1 167 0
 130 005a 8111      		cpse r24,__zero_reg__
 131 005c 00C0      		rjmp .L10
 132               	.LVL16:
 133               	.L6:
 134               	/* epilogue start */
 135               	.LBE34:
 136               	.LBE28:
 175:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** }
 137               		.loc 1 175 0
 138 005e DF91      		pop r29
 139 0060 CF91      		pop r28
 140               	.LVL17:
 141 0062 1F91      		pop r17
 142 0064 0895      		ret
 143               		.cfi_endproc
 144               	.LFE100:
 146               		.section	.text.Audio_Device_Event_Stub,"ax",@progbits
 147               	.global	Audio_Device_Event_Stub
 149               	Audio_Device_Event_Stub:
 150               	.LFB101:
 176:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 
 177:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** void Audio_Device_Event_Stub(void)
 178:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** {
 151               		.loc 1 178 0
 152               		.cfi_startproc
 153               	/* prologue: function */
 154               	/* frame size = 0 */
 155               	/* stack size = 0 */
 156               	.L__stack_usage = 0
 157 0000 0895      		ret
 158               		.cfi_endproc
 159               	.LFE101:
 161               		.weak	EVENT_Audio_Device_StreamStartStop
 162               		.set	EVENT_Audio_Device_StreamStartStop,Audio_Device_Event_Stub
 163               		.section	.text.Audio_Device_ProcessControlRequest,"ax",@progbits
 164               	.global	Audio_Device_ProcessControlRequest
 166               	Audio_Device_ProcessControlRequest:
 167               	.LFB99:
  41:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** {
 168               		.loc 1 41 0
 169               		.cfi_startproc
 170               	.LVL18:
  41:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** {
 171               		.loc 1 41 0
 172 0000 4F92      		push r4
 173               	.LCFI3:
 174               		.cfi_def_cfa_offset 3
 175               		.cfi_offset 4, -2
 176 0002 5F92      		push r5
 177               	.LCFI4:
 178               		.cfi_def_cfa_offset 4
 179               		.cfi_offset 5, -3
 180 0004 6F92      		push r6
 181               	.LCFI5:
 182               		.cfi_def_cfa_offset 5
 183               		.cfi_offset 6, -4
 184 0006 7F92      		push r7
 185               	.LCFI6:
 186               		.cfi_def_cfa_offset 6
 187               		.cfi_offset 7, -5
 188 0008 8F92      		push r8
 189               	.LCFI7:
 190               		.cfi_def_cfa_offset 7
 191               		.cfi_offset 8, -6
 192 000a 9F92      		push r9
 193               	.LCFI8:
 194               		.cfi_def_cfa_offset 8
 195               		.cfi_offset 9, -7
 196 000c AF92      		push r10
 197               	.LCFI9:
 198               		.cfi_def_cfa_offset 9
 199               		.cfi_offset 10, -8
 200 000e BF92      		push r11
 201               	.LCFI10:
 202               		.cfi_def_cfa_offset 10
 203               		.cfi_offset 11, -9
 204 0010 CF92      		push r12
 205               	.LCFI11:
 206               		.cfi_def_cfa_offset 11
 207               		.cfi_offset 12, -10
 208 0012 DF92      		push r13
 209               	.LCFI12:
 210               		.cfi_def_cfa_offset 12
 211               		.cfi_offset 13, -11
 212 0014 EF92      		push r14
 213               	.LCFI13:
 214               		.cfi_def_cfa_offset 13
 215               		.cfi_offset 14, -12
 216 0016 FF92      		push r15
 217               	.LCFI14:
 218               		.cfi_def_cfa_offset 14
 219               		.cfi_offset 15, -13
 220 0018 0F93      		push r16
 221               	.LCFI15:
 222               		.cfi_def_cfa_offset 15
 223               		.cfi_offset 16, -14
 224 001a 1F93      		push r17
 225               	.LCFI16:
 226               		.cfi_def_cfa_offset 16
 227               		.cfi_offset 17, -15
 228 001c CF93      		push r28
 229               	.LCFI17:
 230               		.cfi_def_cfa_offset 17
 231               		.cfi_offset 28, -16
 232 001e DF93      		push r29
 233               	.LCFI18:
 234               		.cfi_def_cfa_offset 18
 235               		.cfi_offset 29, -17
 236 0020 00D0      		rcall .
 237 0022 1F92      		push __zero_reg__
 238               	.LCFI19:
 239               		.cfi_def_cfa_offset 21
 240 0024 CDB7      		in r28,__SP_L__
 241 0026 DEB7      		in r29,__SP_H__
 242               	.LCFI20:
 243               		.cfi_def_cfa_register 28
 244               	/* prologue: function */
 245               	/* frame size = 3 */
 246               	/* stack size = 19 */
 247               	.L__stack_usage = 19
 248 0028 6C01      		movw r12,r24
 135:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** }
 249               		.loc 1 135 0
 250 002a 8DB6      		in r8,__SP_L__
 251 002c 9EB6      		in r9,__SP_H__
 252               	.LBB35:
 253               	.LBB36:
 281:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMask(Size))
 282:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 283:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 284:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 285:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 286:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The return width of this function may differ, depending on the maximum endpoint bank s
 287:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        of the selected AVR model.
 288:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 290:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 291:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 292:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 293:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 294:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 295:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 296:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 297:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 298:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 299:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 300:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 301:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 302:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 303:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 304:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 305:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 306:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint number so that it can be restored after another endpoint has
 307:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  been manipulated.
 308:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 309:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 310:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 311:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 312:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 313:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 314:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 315:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (UENUM & ENDPOINT_EPNUM_MASK);
 316:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 317:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 318:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 319:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 320:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 321:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint number. If the address from the device descriptors is used, the
 322:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  value should be masked with the \ref ENDPOINT_EPNUM_MASK constant to extract only the endpoi
 323:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  number (and discarding the endpoint direction bit).
 324:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 325:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint number to be indicated will operat
 326:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 327:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 328:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber Endpoint number to select.
 329:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 330:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 331:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber)
 332:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 333:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 334:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 335:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 336:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 337:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 338:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 339:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 340:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 341:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber Endpoint number whose FIFO buffers are to be reset.
 342:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 343:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 344:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t EndpointNumber)
 345:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 346:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << EndpointNumber);
 347:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 348:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 349:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 350:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 351:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 352:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 353:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 354:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 355:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 356:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 357:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 358:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 359:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 360:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 361:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 362:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 363:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 364:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 365:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 366:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 367:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 368:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 369:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 370:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 371:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 372:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 373:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 374:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 375:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 376:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 377:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 378:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 379:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 380:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 381:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgement via th
 382:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 383:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 384:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 385:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 386:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 387:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 388:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 389:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 390:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 391:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 392:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 393:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 394:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 395:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 396:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 397:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 398:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 399:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 400:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 401:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 402:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 403:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 404:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 405:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 406:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 407:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 408:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 411:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 412:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 413:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 414:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 415:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 416:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 417:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 418:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 419:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 420:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 421:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 422:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 423:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 424:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 425:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 426:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 427:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 428:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 429:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 430:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 431:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 432:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 433:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 434:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 435:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 436:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 437:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 438:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 439:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 440:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 441:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 442:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 443:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 444:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 445:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 446:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 447:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 448:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 449:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 450:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 451:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 452:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber  Index of the endpoint whose interrupt flag should be tested.
 453:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 454:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 455:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 456:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber) ATTR_WARN_UNUSE
 457:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber)
 458:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 459:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << EndpointNumber)) ? true : false);
 460:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 461:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 462:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 463:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 464:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 465:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 466:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 467:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 468:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 469:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 470:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 471:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 472:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 473:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 474:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 475:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 476:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 477:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 478:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 479:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 480:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 481:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 482:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 483:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 484:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 485:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 486:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 487:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 488:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 489:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 490:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 491:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 492:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 493:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 494:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 495:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 254               		.loc 2 495 0
 255 002e 8091 E800 		lds r24,232
 256               	.LVL19:
 257               	.LBE36:
 258               	.LBE35:
  42:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	if (!(Endpoint_IsSETUPReceived()))
 259               		.loc 1 42 0
 260 0032 83FF      		sbrs r24,3
 261 0034 00C0      		rjmp .L13
  45:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	if ((USB_ControlRequest.bmRequestType & CONTROL_REQTYPE_RECIPIENT) == REQREC_INTERFACE)
 262               		.loc 1 45 0
 263 0036 4091 0000 		lds r20,USB_ControlRequest
 264 003a 842F      		mov r24,r20
 265 003c 8F71      		andi r24,lo8(31)
 266 003e 8130      		cpi r24,lo8(1)
 267 0040 01F4      		brne .L16
  47:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		if (USB_ControlRequest.wIndex != AudioInterfaceInfo->Config.StreamingInterfaceNumber)
 268               		.loc 1 47 0
 269 0042 F601      		movw r30,r12
 270 0044 8081      		ld r24,Z
 271 0046 90E0      		ldi r25,0
 272 0048 2091 0000 		lds r18,USB_ControlRequest+4
 273 004c 3091 0000 		lds r19,USB_ControlRequest+4+1
 274 0050 2817      		cp r18,r24
 275 0052 3907      		cpc r19,r25
 276 0054 01F0      		breq .+2
 277 0056 00C0      		rjmp .L13
 278 0058 00C0      		rjmp .L18
 279               	.L16:
  50:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	else if ((USB_ControlRequest.bmRequestType & CONTROL_REQTYPE_RECIPIENT) == REQREC_ENDPOINT)
 280               		.loc 1 50 0
 281 005a 8230      		cpi r24,lo8(2)
 282 005c 01F4      		brne .L18
 283               	.LVL20:
 284               	.LBB37:
  54:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		EndpointFilterMatch |= (AudioInterfaceInfo->Config.DataINEndpointNumber &&
 285               		.loc 1 54 0
 286 005e F601      		movw r30,r12
 287 0060 8181      		ldd r24,Z+1
 288 0062 8823      		tst r24
 289 0064 01F0      		breq .L30
  55:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		                        ((uint8_t)USB_ControlRequest.wIndex == (ENDPOINT_DIR_IN  | AudioInterface
 290               		.loc 1 55 0 discriminator 1
 291 0066 282F      		mov r18,r24
 292 0068 2068      		ori r18,lo8(-128)
  54:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		EndpointFilterMatch |= (AudioInterfaceInfo->Config.DataINEndpointNumber &&
 293               		.loc 1 54 0 discriminator 1
 294 006a 81E0      		ldi r24,lo8(1)
 295 006c 90E0      		ldi r25,0
 296 006e 3091 0000 		lds r19,USB_ControlRequest+4
 297 0072 3217      		cp r19,r18
 298 0074 01F0      		breq .L19
 299               	.L30:
  54:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		EndpointFilterMatch |= (AudioInterfaceInfo->Config.DataINEndpointNumber &&
 300               		.loc 1 54 0 is_stmt 0
 301 0076 80E0      		ldi r24,0
 302 0078 90E0      		ldi r25,0
 303               	.L19:
 304               	.LVL21:
  57:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		EndpointFilterMatch |= (AudioInterfaceInfo->Config.DataOUTEndpointNumber &&
 305               		.loc 1 57 0 is_stmt 1 discriminator 4
 306 007a F601      		movw r30,r12
 307 007c 5481      		ldd r21,Z+4
 308 007e 5523      		tst r21
 309 0080 01F0      		breq .L31
  57:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		EndpointFilterMatch |= (AudioInterfaceInfo->Config.DataOUTEndpointNumber &&
 310               		.loc 1 57 0 is_stmt 0 discriminator 1
 311 0082 21E0      		ldi r18,lo8(1)
 312 0084 30E0      		ldi r19,0
 313 0086 6091 0000 		lds r22,USB_ControlRequest+4
 314 008a 6517      		cp r22,r21
 315 008c 01F0      		breq .L21
 316               	.L31:
  57:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		EndpointFilterMatch |= (AudioInterfaceInfo->Config.DataOUTEndpointNumber &&
 317               		.loc 1 57 0
 318 008e 20E0      		ldi r18,0
 319 0090 30E0      		ldi r19,0
 320               	.L21:
 321               	.LVL22:
  57:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		EndpointFilterMatch |= (AudioInterfaceInfo->Config.DataOUTEndpointNumber &&
 322               		.loc 1 57 0 discriminator 4
 323 0092 822B      		or r24,r18
 324 0094 932B      		or r25,r19
 325               	.LVL23:
  60:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 		if (!(EndpointFilterMatch))
 326               		.loc 1 60 0 is_stmt 1 discriminator 4
 327 0096 892B      		or r24,r25
 328 0098 01F4      		brne .+2
 329 009a 00C0      		rjmp .L13
 330               	.L18:
 331               	.LBE37:
  64:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 	switch (USB_ControlRequest.bRequest)
 332               		.loc 1 64 0
 333 009c 3091 0000 		lds r19,USB_ControlRequest+1
 334 00a0 3B30      		cpi r19,lo8(11)
 335 00a2 01F0      		breq .L24
 336 00a4 00F4      		brsh .L27
 337 00a6 832F      		mov r24,r19
 338 00a8 8150      		subi r24,lo8(-(-1))
 339 00aa 8430      		cpi r24,lo8(4)
 340 00ac 00F0      		brlo .+2
 341 00ae 00C0      		rjmp .L13
 342 00b0 00C0      		rjmp .L41
 343               	.L27:
 344 00b2 3138      		cpi r19,lo8(-127)
 345 00b4 00F4      		brsh .+2
 346 00b6 00C0      		rjmp .L13
 347 00b8 3538      		cpi r19,lo8(-123)
 348 00ba 00F4      		brsh .+2
 349 00bc 00C0      		rjmp .L25
 350 00be 3F3F      		cpi r19,lo8(-1)
 351 00c0 01F0      		breq .+2
 352 00c2 00C0      		rjmp .L13
 353 00c4 00C0      		rjmp .L26
 354               	.L24:
  67:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_INTERFA
 355               		.loc 1 67 0
 356 00c6 4130      		cpi r20,lo8(1)
 357 00c8 01F0      		breq .+2
 358 00ca 00C0      		rjmp .L13
 359               	.LBB38:
 360               	.LBB39:
 496:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 497:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 498:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 499:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 500:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 501:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 502:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 503:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 504:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 505:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 506:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 507:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 508:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 361               		.loc 2 508 0
 362 00cc 8091 E800 		lds r24,232
 363 00d0 877F      		andi r24,lo8(-9)
 364 00d2 8093 E800 		sts 232,r24
 365               	.LBE39:
 366               	.LBE38:
  70:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				Endpoint_ClearStatusStage();
 367               		.loc 1 70 0
 368 00d6 0E94 0000 		call Endpoint_ClearStatusStage
 369               	.LVL24:
  72:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				AudioInterfaceInfo->State.InterfaceEnabled = ((USB_ControlRequest.wValue & 0xFF) != 0);
 370               		.loc 1 72 0
 371 00da 9091 0000 		lds r25,USB_ControlRequest+2
 372 00de 81E0      		ldi r24,lo8(1)
 373 00e0 9111      		cpse r25,__zero_reg__
 374 00e2 00C0      		rjmp .L28
 375 00e4 80E0      		ldi r24,0
 376               	.L28:
 377 00e6 F601      		movw r30,r12
 378 00e8 8783      		std Z+7,r24
  73:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				EVENT_Audio_Device_StreamStartStop(AudioInterfaceInfo);
 379               		.loc 1 73 0
 380 00ea C601      		movw r24,r12
 381 00ec 0E94 0000 		call EVENT_Audio_Device_StreamStartStop
 382               	.LVL25:
 383 00f0 00C0      		rjmp .L13
 384               	.L26:
  78:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			if ((USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE
 385               		.loc 1 78 0
 386 00f2 4152      		subi r20,lo8(-(-33))
 387 00f4 4230      		cpi r20,lo8(2)
 388 00f6 00F0      		brlo .+2
 389 00f8 00C0      		rjmp .L13
 390               	.LBB40:
 391               	.LBB41:
 392               		.loc 2 508 0
 393 00fa 8091 E800 		lds r24,232
 394 00fe 877F      		andi r24,lo8(-9)
 395 0100 8093 E800 		sts 232,r24
 396               	.LBE41:
 397               	.LBE40:
  82:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				Endpoint_ClearStatusStage();
 398               		.loc 1 82 0
 399 0104 0E94 0000 		call Endpoint_ClearStatusStage
 400               	.LVL26:
 401 0108 00C0      		rjmp .L13
 402               	.L41:
  90:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_ENDPOINT))
 403               		.loc 1 90 0
 404 010a 4232      		cpi r20,lo8(34)
 405 010c 01F0      		breq .+2
 406 010e 00C0      		rjmp .L13
 407               	.LVL27:
 408               	.LBB42:
  93:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				uint8_t EndpointAddress  = (uint8_t)USB_ControlRequest.wIndex;
 409               		.loc 1 93 0
 410 0110 7090 0000 		lds r7,USB_ControlRequest+4
 411               	.LVL28:
  94:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				uint8_t EndpointControl  = (USB_ControlRequest.wValue >> 8);
 412               		.loc 1 94 0
 413 0114 6090 0000 		lds r6,USB_ControlRequest+3
 414               	.LVL29:
  96:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				if (CALLBACK_Audio_Device_GetSetEndpointProperty(AudioInterfaceInfo, EndpointProperty, Endpoint
 415               		.loc 1 96 0
 416 0118 E12C      		mov r14,__zero_reg__
 417 011a F12C      		mov r15,__zero_reg__
 418 011c 00E0      		ldi r16,0
 419 011e 10E0      		ldi r17,0
 420 0120 262D      		mov r18,r6
 421 0122 472D      		mov r20,r7
 422 0124 632F      		mov r22,r19
 423 0126 C601      		movw r24,r12
 424 0128 3B83      		std Y+3,r19
 425 012a 0E94 0000 		call CALLBACK_Audio_Device_GetSetEndpointProperty
 426               	.LVL30:
 427 012e 3B81      		ldd r19,Y+3
 428 0130 8823      		tst r24
 429 0132 01F4      		brne .+2
 430 0134 00C0      		rjmp .L13
 431 0136 4DB6      		in r4,__SP_L__
 432 0138 5EB6      		in r5,__SP_H__
 433               	.LBB43:
  99:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 					uint16_t ValueLength = USB_ControlRequest.wLength;
 434               		.loc 1 99 0
 435 013a 8091 0000 		lds r24,USB_ControlRequest+6
 436 013e 9091 0000 		lds r25,USB_ControlRequest+6+1
 437 0142 9A83      		std Y+2,r25
 438 0144 8983      		std Y+1,r24
 439               	.LVL31:
 100:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 					uint8_t  Value[ValueLength];
 440               		.loc 1 100 0
 441 0146 4DB7      		in r20,__SP_L__
 442 0148 5EB7      		in r21,__SP_H__
 443 014a 481B      		sub r20,r24
 444 014c 590B      		sbc r21,r25
 445 014e 0FB6      		in __tmp_reg__,__SREG__
 446 0150 F894      		cli
 447 0152 5EBF      		out __SP_H__,r21
 448 0154 0FBE      		out __SREG__,__tmp_reg__
 449 0156 4DBF      		out __SP_L__,r20
 450 0158 ADB6      		in r10,__SP_L__
 451 015a BEB6      		in r11,__SP_H__
 452 015c 6FEF      		ldi r22,-1
 453 015e A61A      		sub r10,r22
 454 0160 B60A      		sbc r11,r22
 455               	.LBB44:
 456               	.LBB45:
 457               		.loc 2 508 0
 458 0162 8091 E800 		lds r24,232
 459               	.LVL32:
 460 0166 877F      		andi r24,lo8(-9)
 461 0168 8093 E800 		sts 232,r24
 462               	.LBE45:
 463               	.LBE44:
 103:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 					Endpoint_Read_Control_Stream_LE(Value, ValueLength);
 464               		.loc 1 103 0
 465 016c 6981      		ldd r22,Y+1
 466 016e 7A81      		ldd r23,Y+2
 467 0170 C501      		movw r24,r10
 468 0172 3B83      		std Y+3,r19
 469 0174 0E94 0000 		call Endpoint_Read_Control_Stream_LE
 470               	.LVL33:
 471               	.LBB46:
 472               	.LBB47:
 509:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 510:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 511:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 512:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 513:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 514:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 515:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 516:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 517:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 518:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 519:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 520:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 473               		.loc 2 520 0
 474 0178 8091 E800 		lds r24,232
 475 017c 8E77      		andi r24,lo8(126)
 476 017e 8093 E800 		sts 232,r24
 477               	.LBE47:
 478               	.LBE46:
 106:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 					CALLBACK_Audio_Device_GetSetEndpointProperty(AudioInterfaceInfo, EndpointProperty, EndpointAdd
 479               		.loc 1 106 0
 480 0182 7501      		movw r14,r10
 481 0184 8E01      		movw r16,r28
 482 0186 0F5F      		subi r16,-1
 483 0188 1F4F      		sbci r17,-1
 484 018a 262D      		mov r18,r6
 485 018c 472D      		mov r20,r7
 486 018e 3B81      		ldd r19,Y+3
 487 0190 632F      		mov r22,r19
 488 0192 C601      		movw r24,r12
 489 0194 0E94 0000 		call CALLBACK_Audio_Device_GetSetEndpointProperty
 490               	.LVL34:
 491 0198 342D      		mov r19,r4
 492 019a 252D      		mov r18,r5
 493 019c 00C0      		rjmp .L42
 494               	.LVL35:
 495               	.L25:
 496               	.LBE43:
 497               	.LBE42:
 116:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_ENDPOINT))
 498               		.loc 1 116 0
 499 019e 423A      		cpi r20,lo8(-94)
 500 01a0 01F4      		brne .L13
 501 01a2 6DB6      		in r6,__SP_L__
 502 01a4 7EB6      		in r7,__SP_H__
 503               	.LVL36:
 504               	.LBB48:
 119:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				uint8_t  EndpointAddress  = (uint8_t)USB_ControlRequest.wIndex;
 505               		.loc 1 119 0
 506 01a6 4091 0000 		lds r20,USB_ControlRequest+4
 507               	.LVL37:
 120:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				uint8_t  EndpointControl  = (USB_ControlRequest.wValue >> 8);
 508               		.loc 1 120 0
 509 01aa 2091 0000 		lds r18,USB_ControlRequest+3
 510               	.LVL38:
 121:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				uint16_t ValueLength      = USB_ControlRequest.wLength;
 511               		.loc 1 121 0
 512 01ae 8091 0000 		lds r24,USB_ControlRequest+6
 513 01b2 9091 0000 		lds r25,USB_ControlRequest+6+1
 514 01b6 9A83      		std Y+2,r25
 515 01b8 8983      		std Y+1,r24
 516               	.LVL39:
 122:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				uint8_t  Value[ValueLength];
 517               		.loc 1 122 0
 518 01ba EDB7      		in r30,__SP_L__
 519 01bc FEB7      		in r31,__SP_H__
 520 01be E81B      		sub r30,r24
 521 01c0 F90B      		sbc r31,r25
 522 01c2 0FB6      		in __tmp_reg__,__SREG__
 523 01c4 F894      		cli
 524 01c6 FEBF      		out __SP_H__,r31
 525 01c8 0FBE      		out __SREG__,__tmp_reg__
 526 01ca EDBF      		out __SP_L__,r30
 527 01cc ADB6      		in r10,__SP_L__
 528 01ce BEB6      		in r11,__SP_H__
 529 01d0 6FEF      		ldi r22,-1
 530 01d2 A61A      		sub r10,r22
 531 01d4 B60A      		sbc r11,r22
 124:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 				if (CALLBACK_Audio_Device_GetSetEndpointProperty(AudioInterfaceInfo, EndpointProperty, Endpoint
 532               		.loc 1 124 0
 533 01d6 7501      		movw r14,r10
 534 01d8 8E01      		movw r16,r28
 535 01da 0F5F      		subi r16,-1
 536 01dc 1F4F      		sbci r17,-1
 537 01de 632F      		mov r22,r19
 538 01e0 C601      		movw r24,r12
 539               	.LVL40:
 540 01e2 0E94 0000 		call CALLBACK_Audio_Device_GetSetEndpointProperty
 541               	.LVL41:
 542 01e6 8823      		tst r24
 543 01e8 01F0      		breq .L29
 544               	.LBB49:
 545               	.LBB50:
 508:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 546               		.loc 2 508 0
 547 01ea 8091 E800 		lds r24,232
 548 01ee 877F      		andi r24,lo8(-9)
 549 01f0 8093 E800 		sts 232,r24
 550               	.LBE50:
 551               	.LBE49:
 128:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** 					Endpoint_Write_Control_Stream_LE(Value, ValueLength);
 552               		.loc 1 128 0
 553 01f4 6981      		ldd r22,Y+1
 554 01f6 7A81      		ldd r23,Y+2
 555 01f8 C501      		movw r24,r10
 556 01fa 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 557               	.LVL42:
 558               	.LBB51:
 559               	.LBB52:
 521:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 522:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 523:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 524:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 525:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 526:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 527:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 528:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 529:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 530:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 531:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 532:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 533:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 534:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 535:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 560               		.loc 2 535 0
 561 01fe 8091 E800 		lds r24,232
 562 0202 8B77      		andi r24,lo8(123)
 563 0204 8093 E800 		sts 232,r24
 564               	.L29:
 565 0208 362D      		mov r19,r6
 566 020a 272D      		mov r18,r7
 567               	.LVL43:
 568               	.L42:
 569 020c 832F      		mov r24,r19
 570 020e 922F      		mov r25,r18
 571 0210 0FB6      		in __tmp_reg__,__SREG__
 572 0212 F894      		cli
 573 0214 9EBF      		out __SP_H__,r25
 574 0216 0FBE      		out __SREG__,__tmp_reg__
 575 0218 8DBF      		out __SP_L__,r24
 576               	.L13:
 577               	.LBE52:
 578               	.LBE51:
 579               	.LBE48:
 135:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.c **** }
 580               		.loc 1 135 0
 581 021a 0FB6      		in __tmp_reg__,__SREG__
 582 021c F894      		cli
 583 021e 9EBE      		out __SP_H__,r9
 584 0220 0FBE      		out __SREG__,__tmp_reg__
 585 0222 8DBE      		out __SP_L__,r8
 586               	/* epilogue start */
 587 0224 0F90      		pop __tmp_reg__
 588 0226 0F90      		pop __tmp_reg__
 589 0228 0F90      		pop __tmp_reg__
 590 022a DF91      		pop r29
 591 022c CF91      		pop r28
 592 022e 1F91      		pop r17
 593 0230 0F91      		pop r16
 594 0232 FF90      		pop r15
 595 0234 EF90      		pop r14
 596 0236 DF90      		pop r13
 597 0238 CF90      		pop r12
 598               	.LVL44:
 599 023a BF90      		pop r11
 600 023c AF90      		pop r10
 601 023e 9F90      		pop r9
 602 0240 8F90      		pop r8
 603 0242 7F90      		pop r7
 604 0244 6F90      		pop r6
 605 0246 5F90      		pop r5
 606 0248 4F90      		pop r4
 607 024a 0895      		ret
 608               		.cfi_endproc
 609               	.LFE99:
 611               		.text
 612               	.Letext0:
 613               		.file 3 "/usr/lib/gcc/avr/4.7.0/../../../../avr/include/stdint.h"
 614               		.file 4 "lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../StdRequestType.h"
 615               		.file 5 "lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Class/Device/../Common/AudioClassCommon.
 616               		.file 6 "lufa-lib-svn/LUFA/Drivers/USB/Class/Device/AudioClassDevice.h"
 617               		.file 7 "lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/EndpointStream_AVR8.h"
 618               		.file 8 "lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:00000000 AudioClassDevice.c
     /tmp/ccTogIW4.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccTogIW4.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccTogIW4.s:4      *ABS*:0000003f __SREG__
     /tmp/ccTogIW4.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccTogIW4.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccTogIW4.s:13     .text.Audio_Device_ConfigureEndpoints:00000000 Audio_Device_ConfigureEndpoints
     /tmp/ccTogIW4.s:149    .text.Audio_Device_Event_Stub:00000000 Audio_Device_Event_Stub
     /tmp/ccTogIW4.s:149    .text.Audio_Device_Event_Stub:00000000 EVENT_Audio_Device_StreamStartStop
     /tmp/ccTogIW4.s:166    .text.Audio_Device_ProcessControlRequest:00000000 Audio_Device_ProcessControlRequest

UNDEFINED SYMBOLS
Endpoint_ConfigureEndpoint_Prv
USB_ControlRequest
Endpoint_ClearStatusStage
CALLBACK_Audio_Device_GetSetEndpointProperty
Endpoint_Read_Control_Stream_LE
Endpoint_Write_Control_Stream_LE
