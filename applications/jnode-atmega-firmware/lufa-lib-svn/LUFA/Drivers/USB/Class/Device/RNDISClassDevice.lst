   1               		.file	"RNDISClassDevice.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.RNDIS_Device_ProcessControlRequest,"ax",@progbits
  11               	.global	RNDIS_Device_ProcessControlRequest
  13               	RNDIS_Device_ProcessControlRequest:
  14               	.LFB99:
  15               		.file 1 "lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c"
   1:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** /*
   2:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****              LUFA Library
   3:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****      Copyright (C) Dean Camera, 2011.
   4:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
   5:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   dean [at] fourwalledcubicle [dot] com
   6:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****            www.lufa-lib.org
   7:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** */
   8:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
   9:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** /*
  10:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  12:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   Permission to use, copy, modify, distribute, and sell this
  13:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   software and its documentation for any purpose is hereby granted
  14:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   without fee, provided that the above copyright notice appear in
  15:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   all copies and that both that the copyright notice and this
  16:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   permission notice and warranty disclaimer appear in supporting
  17:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   documentation, and that the name of the author not be used in
  18:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   advertising or publicity pertaining to distribution of the
  19:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   software without specific, written prior permission.
  20:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  21:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   The author disclaim all warranties with regard to this
  22:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   software, including all implied warranties of merchantability
  23:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   and fitness.  In no event shall the author be liable for any
  24:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   special, indirect or consequential damages or any damages
  25:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   in an action of contract, negligence or other tortious action,
  27:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   arising out of or in connection with the use or performance of
  28:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   this software.
  29:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** */
  30:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  31:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #define  __INCLUDE_FROM_USB_DRIVER
  32:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #include "../../Core/USBMode.h"
  33:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  34:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #if defined(USB_CAN_BE_DEVICE)
  35:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  36:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #define  __INCLUDE_FROM_RNDIS_DRIVER
  37:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #define  __INCLUDE_FROM_RNDIS_DEVICE_C
  38:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #include "RNDISClassDevice.h"
  39:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  40:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** static const uint32_t PROGMEM AdapterSupportedOIDList[]  =
  41:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
  42:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_SUPPORTED_LIST),
  43:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_PHYSICAL_MEDIUM),
  44:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_HARDWARE_STATUS),
  45:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MEDIA_SUPPORTED),
  46:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MEDIA_IN_USE),
  47:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MAXIMUM_FRAME_SIZE),
  48:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MAXIMUM_TOTAL_SIZE),
  49:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_LINK_SPEED),
  50:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_TRANSMIT_BLOCK_SIZE),
  51:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_RECEIVE_BLOCK_SIZE),
  52:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_VENDOR_ID),
  53:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_VENDOR_DESCRIPTION),
  54:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_CURRENT_PACKET_FILTER),
  55:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MAXIMUM_TOTAL_SIZE),
  56:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MEDIA_CONNECT_STATUS),
  57:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_XMIT_OK),
  58:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_RCV_OK),
  59:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_XMIT_ERROR),
  60:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_RCV_ERROR),
  61:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_RCV_NO_BUFFER),
  62:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_PERMANENT_ADDRESS),
  63:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_CURRENT_ADDRESS),
  64:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_MULTICAST_LIST),
  65:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_MAXIMUM_LIST_SIZE),
  66:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_RCV_ERROR_ALIGNMENT),
  67:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_XMIT_ONE_COLLISION),
  68:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_XMIT_MORE_COLLISIONS),
  69:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	};
  70:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  71:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** void RNDIS_Device_ProcessControlRequest(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
  72:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
  16               		.loc 1 72 0
  17               		.cfi_startproc
  18               	.LVL0:
  19 0000 0F93      		push r16
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 16, -2
  23 0002 1F93      		push r17
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 17, -3
  27 0004 CF93      		push r28
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 5
  30               		.cfi_offset 28, -4
  31 0006 DF93      		push r29
  32               	.LCFI3:
  33               		.cfi_def_cfa_offset 6
  34               		.cfi_offset 29, -5
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 4 */
  38               	.L__stack_usage = 4
  39 0008 EC01      		movw r28,r24
  40               	.LBB62:
  41               	.LBB63:
  42               		.file 2 "lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2011.
   4:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaim all warranties with regard to this
  22:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
  93:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE(EPIndex)         _ENDPOINT_GET_MAXSIZE2(ENDPOINT_DETAILS_EP ## EPI
  94:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE2(EPDetails)      _ENDPOINT_GET_MAXSIZE3(EPDetails)
  95:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE3(MaxSize, Banks) (MaxSize)
  96:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  97:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS(EPIndex)           _ENDPOINT_GET_BANKS2(ENDPOINT_DETAILS_EP ## EPInd
  98:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS2(EPDetails)        _ENDPOINT_GET_BANKS3(EPDetails)
  99:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS3(MaxSize, Banks)   (Banks)
 100:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 101:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 102:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_MAXEP             7
 103:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 104:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP0               64,  1
 105:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP1               256, 2
 106:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP2               64,  2
 107:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 108:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 109:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP5               64,  2
 110:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP6               64,  2
 111:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 112:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_MAXEP             5
 113:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 114:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP0               64,  1
 115:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP1               64,  1
 116:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP2               64,  1
 117:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 118:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 119:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 120:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 121:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 122:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
 123:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
 124:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
 125:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 126:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
 127:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 128:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 129:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 130:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 131:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 132:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 133:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 134:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 135:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 136:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 137:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 138:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 139:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 140:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 141:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 142:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 143:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 144:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 145:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 146:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 147:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 148:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** \name Endpoint Bank Mode Masks */
 149:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			//@{
 150:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 151:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  that the endpoint should have one single bank, which requires less USB FIFO memory but resul
 152:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  in slower transfers as only one USB device (the AVR or the host) can access the endpoint's
 153:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank at the one time.
 154:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 155:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANK_SINGLE                    (0 << EPBK0)
 156:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 157:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 158:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  that the endpoint should have two banks, which requires more USB FIFO memory but results
 159:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  in faster transfers as one USB device (the AVR or the host) can access one bank while the ot
 160:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  accesses the second bank.
 161:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 162:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANK_DOUBLE                    (1 << EPBK0)
 163:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			//@}
 164:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 165:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 166:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 167:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 168:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 169:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 170:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 171:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 172:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the maximum bank size in bytes of a given endpoint.
 173:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 174:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This macro will only work correctly on endpoint indexes that are compile-time constant
 175:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        defined by the preprocessor.
 176:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 177:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (\ref ENDPOINT_TOTAL_ENDPOINTS - 
 178:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 179:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_MAX_SIZE(EPIndex)              _ENDPOINT_GET_MAXSIZE(EPIndex)
 180:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 181:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the total number of banks supported by the given endpoint.
 182:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This macro will only work correctly on endpoint indexes that are compile-time constant
 184:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        defined by the preprocessor.
 185:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 186:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (\ref ENDPOINT_TOTAL_ENDPOINTS - 
 187:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 188:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANKS_SUPPORTED(EPIndex)       _ENDPOINT_GET_BANKS(EPIndex)
 189:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 190:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 191:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Total number of endpoints (including the default control endpoint at address 0) which may
 192:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 193:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 194:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 195:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            ENDPOINT_DETAILS_MAXEP
 196:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 197:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 198:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 199:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 200:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 201:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 202:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 203:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 204:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 205:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 206:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 207:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 208:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 209:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 210:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 211:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 212:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 213:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 214:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 215:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 216:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 217:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 218:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 219:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 220:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 221:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 222:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_TransmissionInProgress  = 5, /**< The bank for the USB endpoint is currently
 223:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****                                                          *   and can't be written at the moment.
 224:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 225:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 226:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 227:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 228:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 229:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint number with the given endpoint type, direction, bank size
 230:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and banking mode. Once configured, the endpoint may be read from or written to, depending
 231:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  on its direction.
 232:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 233:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Number     Endpoint number to configure. This must be more than 0 and less than
 234:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        \ref ENDPOINT_TOTAL_ENDPOINTS.
 235:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 236:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 237:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 238:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 239:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Direction  Endpoint data direction, either \ref ENDPOINT_DIR_OUT or \ref ENDPOINT
 240:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        All endpoints (except Control type) are unidirectional - data may only
 241:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        from or written to the endpoint bank based on its direction, not both.
 242:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 243:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 244:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 245:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 246:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 247:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 248:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured, an \c ENDPOI
 249:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        More banks uses more USB DPRAM, but offers better performance. Isochro
 250:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        endpoints <b>must</b> have at least two banks.
 251:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 252:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> be co
 253:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        ascending order, or bank corruption will occur.
 254:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 255:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 256:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 257:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        the chosen microcontroller model's datasheet to determine the maximum bank size for ea
 258:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 259:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 260:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 261:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 262:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 263:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 265:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 266:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 267:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 268:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 269:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 270:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 271:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Direction,
 272:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 273:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 274:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 275:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 276:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Direction,
 277:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 278:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 279:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 280:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, ((Type << EPTYPE0) | (Direction ? (1 << EPDIR) : 
 281:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMask(Size))
 282:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 283:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 284:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 285:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 286:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The return width of this function may differ, depending on the maximum endpoint bank s
 287:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        of the selected AVR model.
 288:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 290:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 291:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 292:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 293:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 294:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 295:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 296:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 297:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 298:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 299:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 300:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 301:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 302:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 303:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 304:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 305:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 306:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint number so that it can be restored after another endpoint has
 307:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  been manipulated.
 308:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 309:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 310:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 311:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 312:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 313:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 314:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 315:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (UENUM & ENDPOINT_EPNUM_MASK);
 316:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 317:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 318:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 319:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 320:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 321:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint number. If the address from the device descriptors is used, the
 322:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  value should be masked with the \ref ENDPOINT_EPNUM_MASK constant to extract only the endpoi
 323:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  number (and discarding the endpoint direction bit).
 324:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 325:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint number to be indicated will operat
 326:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 327:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 328:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber Endpoint number to select.
 329:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 330:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 331:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber)
 332:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 333:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 334:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 335:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 336:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 337:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 338:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 339:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 340:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 341:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber Endpoint number whose FIFO buffers are to be reset.
 342:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 343:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 344:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t EndpointNumber)
 345:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 346:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << EndpointNumber);
 347:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 348:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 349:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 350:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 351:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 352:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 353:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 354:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 355:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 356:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 357:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 358:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 359:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 360:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 361:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 362:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 363:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 364:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 365:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 366:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 367:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 368:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 369:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 370:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 371:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 372:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 373:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 374:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 375:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 376:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 377:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 378:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 379:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 380:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 381:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgement via th
 382:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 383:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 384:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 385:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 386:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 387:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 388:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 389:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 390:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 391:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 392:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 393:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 394:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 395:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 396:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 397:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 398:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 399:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 400:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 401:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 402:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 403:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 404:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 405:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 406:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 407:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 408:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 411:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 412:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 413:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 414:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 415:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 416:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 417:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 418:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 419:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 420:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 421:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 422:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 423:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 424:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 425:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 426:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 427:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 428:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 429:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 430:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 431:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 432:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 433:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 434:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 435:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 436:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 437:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 438:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 439:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 440:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 441:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 442:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 443:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 444:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 445:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 446:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 447:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 448:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 449:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 450:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 451:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 452:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber  Index of the endpoint whose interrupt flag should be tested.
 453:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 454:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 455:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 456:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber) ATTR_WARN_UNUSE
 457:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber)
 458:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 459:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << EndpointNumber)) ? true : false);
 460:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 461:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 462:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 463:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 464:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 465:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 466:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 467:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 468:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 469:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 470:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 471:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 472:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 473:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 474:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 475:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 476:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 477:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 478:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 479:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 480:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 481:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 482:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 483:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 484:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 485:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 486:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 487:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 488:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 489:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 490:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 491:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 492:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 493:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 494:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 495:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
  43               		.loc 2 495 0
  44 000a 8091 E800 		lds r24,232
  45               	.LVL1:
  46               	.LBE63:
  47               	.LBE62:
  73:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (!(Endpoint_IsSETUPReceived()))
  48               		.loc 1 73 0
  49 000e 83FF      		sbrs r24,3
  50 0010 00C0      		rjmp .L1
  74:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return;
  75:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  76:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (USB_ControlRequest.wIndex != RNDISInterfaceInfo->Config.ControlInterfaceNumber)
  51               		.loc 1 76 0
  52 0012 8881      		ld r24,Y
  53 0014 90E0      		ldi r25,0
  54 0016 2091 0000 		lds r18,USB_ControlRequest+4
  55 001a 3091 0000 		lds r19,USB_ControlRequest+4+1
  56 001e 2817      		cp r18,r24
  57 0020 3907      		cpc r19,r25
  58 0022 01F0      		breq .+2
  59 0024 00C0      		rjmp .L1
  77:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return;
  78:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  79:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	switch (USB_ControlRequest.bRequest)
  60               		.loc 1 79 0
  61 0026 8091 0000 		lds r24,USB_ControlRequest+1
  62 002a 8823      		tst r24
  63 002c 01F0      		breq .L3
  64 002e 8130      		cpi r24,lo8(1)
  65 0030 01F0      		breq .+2
  66 0032 00C0      		rjmp .L1
  67 0034 00C0      		rjmp .L4
  68               	.L3:
  80:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
  81:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case RNDIS_REQ_SendEncapsulatedCommand:
  82:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
  69               		.loc 1 82 0
  70 0036 8091 0000 		lds r24,USB_ControlRequest
  71 003a 8132      		cpi r24,lo8(33)
  72 003c 01F0      		breq .+2
  73 003e 00C0      		rjmp .L1
  74               	.LBB64:
  75               	.LBB65:
 496:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 497:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 498:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 499:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 500:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 501:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 502:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 503:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 504:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 505:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 506:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 507:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 508:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
  76               		.loc 2 508 0
  77 0040 8091 E800 		lds r24,232
  78 0044 877F      		andi r24,lo8(-9)
  79 0046 8093 E800 		sts 232,r24
  80               	.LBE65:
  81               	.LBE64:
  83:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
  84:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_ClearSETUP();
  85:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_Read_Control_Stream_LE(RNDISInterfaceInfo->State.RNDISMessageBuffer, USB_ControlReques
  82               		.loc 1 85 0
  83 004a 6091 0000 		lds r22,USB_ControlRequest+6
  84 004e 7091 0000 		lds r23,USB_ControlRequest+6+1
  85 0052 CE01      		movw r24,r28
  86 0054 4596      		adiw r24,21
  87 0056 0E94 0000 		call Endpoint_Read_Control_Stream_LE
  88               	.LVL2:
  89               	.LBB66:
  90               	.LBB67:
 509:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 510:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 511:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 512:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 513:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 514:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 515:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 516:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 517:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 518:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 519:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 520:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
  91               		.loc 2 520 0
  92 005a 8091 E800 		lds r24,232
  93 005e 8E77      		andi r24,lo8(126)
  94 0060 8093 E800 		sts 232,r24
  95               	.LVL3:
  96               	.LBE67:
  97               	.LBE66:
  98               	.LBB68:
  99               	.LBB69:
  86:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_ClearIN();
  87:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  88:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				RNDIS_Device_ProcessRNDISControlMessage(RNDISInterfaceInfo);
  89:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			}
  90:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  91:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
  92:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case RNDIS_REQ_GetEncapsulatedResponse:
  93:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
  94:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
  95:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				RNDIS_Message_Header_t* MessageHeader = (RNDIS_Message_Header_t*)&RNDISInterfaceInfo->State.RND
  96:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  97:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				if (!(MessageHeader->MessageLength))
  98:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				{
  99:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 					RNDISInterfaceInfo->State.RNDISMessageBuffer[0] = 0;
 100:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 					MessageHeader->MessageLength                    = CPU_TO_LE32(1);
 101:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				}
 102:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 103:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_ClearSETUP();
 104:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_Write_Control_Stream_LE(RNDISInterfaceInfo->State.RNDISMessageBuffer, le32_to_cpu(Mess
 105:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_ClearOUT();
 106:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 107:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				MessageHeader->MessageLength = CPU_TO_LE32(0);
 108:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			}
 109:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 110:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 111:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 112:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 113:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 114:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** bool RNDIS_Device_ConfigureEndpoints(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
 115:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 116:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	memset(&RNDISInterfaceInfo->State, 0x00, sizeof(RNDISInterfaceInfo->State));
 117:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 118:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	for (uint8_t EndpointNum = 1; EndpointNum < ENDPOINT_TOTAL_ENDPOINTS; EndpointNum++)
 119:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 120:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		uint16_t Size;
 121:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		uint8_t  Type;
 122:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		uint8_t  Direction;
 123:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		bool     DoubleBanked;
 124:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 125:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		if (EndpointNum == RNDISInterfaceInfo->Config.DataINEndpointNumber)
 126:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		{
 127:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Size         = RNDISInterfaceInfo->Config.DataINEndpointSize;
 128:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Direction    = ENDPOINT_DIR_IN;
 129:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Type         = EP_TYPE_BULK;
 130:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.DataINEndpointDoubleBank;
 131:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		}
 132:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		else if (EndpointNum == RNDISInterfaceInfo->Config.DataOUTEndpointNumber)
 133:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		{
 134:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Size         = RNDISInterfaceInfo->Config.DataOUTEndpointSize;
 135:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Direction    = ENDPOINT_DIR_OUT;
 136:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Type         = EP_TYPE_BULK;
 137:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.DataOUTEndpointDoubleBank;
 138:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		}
 139:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		else if (EndpointNum == RNDISInterfaceInfo->Config.NotificationEndpointNumber)
 140:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		{
 141:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Size         = RNDISInterfaceInfo->Config.NotificationEndpointSize;
 142:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Direction    = ENDPOINT_DIR_IN;
 143:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Type         = EP_TYPE_INTERRUPT;
 144:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.NotificationEndpointDoubleBank;
 145:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		}
 146:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		else
 147:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		{
 148:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			continue;
 149:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		}
 150:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 151:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		if (!(Endpoint_ConfigureEndpoint(EndpointNum, Type, Direction, Size,
 152:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		                                 DoubleBanked ? ENDPOINT_BANK_DOUBLE : ENDPOINT_BANK_SINGLE)))
 153:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		{
 154:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return false;
 155:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		}
 156:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 157:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 158:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	return true;
 159:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 160:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 161:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** void RNDIS_Device_USBTask(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
 162:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 163:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 164:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return;
 165:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 166:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.NotificationEndpointNumber);
 167:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 168:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.ResponseReady)
 169:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 170:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		USB_Request_Header_t Notification = (USB_Request_Header_t)
 171:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
 172:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				.bmRequestType = (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE),
 173:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				.bRequest      = RNDIS_NOTIF_ResponseAvailable,
 174:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				.wValue        = CPU_TO_LE16(0),
 175:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				.wIndex        = CPU_TO_LE16(0),
 176:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				.wLength       = CPU_TO_LE16(0),
 177:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			};
 178:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 179:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		Endpoint_Write_Stream_LE(&Notification, sizeof(USB_Request_Header_t), NULL);
 180:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 181:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		Endpoint_ClearIN();
 182:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 183:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		RNDISInterfaceInfo->State.ResponseReady = false;
 184:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 185:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 186:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 187:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** void RNDIS_Device_ProcessRNDISControlMessage(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo
 188:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 189:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	/* Note: Only a single buffer is used for both the received message and its response to save SRAM.
 190:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	         this, response bytes should be filled in order so that they do not clobber unread data in
 191:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 192:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDIS_Message_Header_t* MessageHeader = (RNDIS_Message_Header_t*)&RNDISInterfaceInfo->State.RNDISM
 193:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 194:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	switch (le32_to_cpu(MessageHeader->MessageType))
 100               		.loc 1 194 0
 101 0064 4D89      		ldd r20,Y+21
 102 0066 5E89      		ldd r21,Y+22
 103 0068 6F89      		ldd r22,Y+23
 104 006a 788D      		ldd r23,Y+24
 105 006c 4430      		cpi r20,4
 106 006e 5105      		cpc r21,__zero_reg__
 107 0070 6105      		cpc r22,__zero_reg__
 108 0072 7105      		cpc r23,__zero_reg__
 109 0074 01F4      		brne .+2
 110 0076 00C0      		rjmp .L7
 111 0078 00F4      		brsh .L11
 112 007a 4230      		cpi r20,2
 113 007c 5105      		cpc r21,__zero_reg__
 114 007e 6105      		cpc r22,__zero_reg__
 115 0080 7105      		cpc r23,__zero_reg__
 116 0082 01F0      		breq .L5
 117 0084 4330      		cpi r20,3
 118 0086 5105      		cpc r21,__zero_reg__
 119 0088 6105      		cpc r22,__zero_reg__
 120 008a 7105      		cpc r23,__zero_reg__
 121 008c 01F0      		breq .+2
 122 008e 00C0      		rjmp .L1
 123 0090 00C0      		rjmp .L6
 124               	.L11:
 125 0092 4630      		cpi r20,6
 126 0094 5105      		cpc r21,__zero_reg__
 127 0096 6105      		cpc r22,__zero_reg__
 128 0098 7105      		cpc r23,__zero_reg__
 129 009a 01F4      		brne .+2
 130 009c 00C0      		rjmp .L9
 131 009e 00F4      		brsh .+2
 132 00a0 00C0      		rjmp .L8
 133 00a2 4830      		cpi r20,8
 134 00a4 5105      		cpc r21,__zero_reg__
 135 00a6 6105      		cpc r22,__zero_reg__
 136 00a8 7105      		cpc r23,__zero_reg__
 137 00aa 01F0      		breq .+2
 138 00ac 00C0      		rjmp .L1
 139 00ae 00C0      		rjmp .L10
 140               	.L5:
 141               	.LBB70:
 195:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 196:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_INITIALIZE_MSG:
 197:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 142               		.loc 1 197 0
 143 00b0 FE01      		movw r30,r28
 144 00b2 EB56      		subi r30,107
 145 00b4 FF4F      		sbci r31,-1
 146 00b6 21E0      		ldi r18,lo8(1)
 147 00b8 2083      		st Z,r18
 148               	.LVL4:
 198:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 199:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Initialize_Message_t*  INITIALIZE_Message  =
 200:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			               (RNDIS_Initialize_Message_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 201:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Initialize_Complete_t* INITIALIZE_Response =
 202:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			               (RNDIS_Initialize_Complete_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 203:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 204:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MessageType            = CPU_TO_LE32(REMOTE_NDIS_INITIALIZE_CMPLT);
 149               		.loc 1 204 0
 150 00ba 82E0      		ldi r24,lo8(2)
 151 00bc 90E0      		ldi r25,0
 152 00be A0E0      		ldi r26,0
 153 00c0 B0E8      		ldi r27,lo8(-128)
 154 00c2 8D8B      		std Y+21,r24
 155 00c4 9E8B      		std Y+22,r25
 156 00c6 AF8B      		std Y+23,r26
 157 00c8 B88F      		std Y+24,r27
 205:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MessageLength          = CPU_TO_LE32(sizeof(RNDIS_Initialize_Complete_t));
 158               		.loc 1 205 0
 159 00ca 84E3      		ldi r24,lo8(52)
 160 00cc 90E0      		ldi r25,0
 161 00ce A0E0      		ldi r26,0
 162 00d0 B0E0      		ldi r27,0
 163 00d2 898F      		std Y+25,r24
 164 00d4 9A8F      		std Y+26,r25
 165 00d6 AB8F      		std Y+27,r26
 166 00d8 BC8F      		std Y+28,r27
 206:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->RequestId              = INITIALIZE_Message->RequestId;
 207:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->Status                 = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 167               		.loc 1 207 0
 168 00da 19A2      		std Y+33,__zero_reg__
 169 00dc 1AA2      		std Y+34,__zero_reg__
 170 00de 1BA2      		std Y+35,__zero_reg__
 171 00e0 1CA2      		std Y+36,__zero_reg__
 208:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 209:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MajorVersion           = CPU_TO_LE32(REMOTE_NDIS_VERSION_MAJOR);
 172               		.loc 1 209 0
 173 00e2 41E0      		ldi r20,lo8(1)
 174 00e4 50E0      		ldi r21,0
 175 00e6 60E0      		ldi r22,0
 176 00e8 70E0      		ldi r23,0
 177 00ea 4DA3      		std Y+37,r20
 178 00ec 5EA3      		std Y+38,r21
 179 00ee 6FA3      		std Y+39,r22
 180 00f0 78A7      		std Y+40,r23
 210:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MinorVersion           = CPU_TO_LE32(REMOTE_NDIS_VERSION_MINOR);
 181               		.loc 1 210 0
 182 00f2 19A6      		std Y+41,__zero_reg__
 183 00f4 1AA6      		std Y+42,__zero_reg__
 184 00f6 1BA6      		std Y+43,__zero_reg__
 185 00f8 1CA6      		std Y+44,__zero_reg__
 211:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->DeviceFlags            = CPU_TO_LE32(REMOTE_NDIS_DF_CONNECTIONLESS);
 186               		.loc 1 211 0
 187 00fa 4DA7      		std Y+45,r20
 188 00fc 5EA7      		std Y+46,r21
 189 00fe 6FA7      		std Y+47,r22
 190 0100 78AB      		std Y+48,r23
 212:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->Medium                 = CPU_TO_LE32(REMOTE_NDIS_MEDIUM_802_3);
 191               		.loc 1 212 0
 192 0102 19AA      		std Y+49,__zero_reg__
 193 0104 1AAA      		std Y+50,__zero_reg__
 194 0106 1BAA      		std Y+51,__zero_reg__
 195 0108 1CAA      		std Y+52,__zero_reg__
 213:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MaxPacketsPerTransfer  = CPU_TO_LE32(1);
 196               		.loc 1 213 0
 197 010a 4DAB      		std Y+53,r20
 198 010c 5EAB      		std Y+54,r21
 199 010e 6FAB      		std Y+55,r22
 200 0110 78AF      		std Y+56,r23
 214:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MaxTransferSize        = CPU_TO_LE32(sizeof(RNDIS_Packet_Message_t) + ETHER
 201               		.loc 1 214 0
 202 0112 88E0      		ldi r24,lo8(8)
 203 0114 96E0      		ldi r25,lo8(6)
 204 0116 A0E0      		ldi r26,0
 205 0118 B0E0      		ldi r27,0
 206 011a 89AF      		std Y+57,r24
 207 011c 9AAF      		std Y+58,r25
 208 011e ABAF      		std Y+59,r26
 209 0120 BCAF      		std Y+60,r27
 215:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->PacketAlignmentFactor  = CPU_TO_LE32(0);
 210               		.loc 1 215 0
 211 0122 FE01      		movw r30,r28
 212 0124 FD96      		adiw r30,61
 213 0126 1082      		st Z,__zero_reg__
 214 0128 1182      		std Z+1,__zero_reg__
 215 012a 1282      		std Z+2,__zero_reg__
 216 012c 1382      		std Z+3,__zero_reg__
 216:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->AFListOffset           = CPU_TO_LE32(0);
 217               		.loc 1 216 0
 218 012e FE01      		movw r30,r28
 219 0130 EF5B      		subi r30,-65
 220 0132 FF4F      		sbci r31,-1
 221 0134 1082      		st Z,__zero_reg__
 222 0136 1182      		std Z+1,__zero_reg__
 223 0138 1282      		std Z+2,__zero_reg__
 224 013a 1382      		std Z+3,__zero_reg__
 217:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->AFListSize             = CPU_TO_LE32(0);
 225               		.loc 1 217 0
 226 013c FE01      		movw r30,r28
 227 013e EB5B      		subi r30,-69
 228 0140 FF4F      		sbci r31,-1
 229 0142 1082      		st Z,__zero_reg__
 230 0144 1182      		std Z+1,__zero_reg__
 231 0146 1282      		std Z+2,__zero_reg__
 232 0148 1382      		std Z+3,__zero_reg__
 218:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 219:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.CurrRNDISState    = RNDIS_Initialized;
 233               		.loc 1 219 0
 234 014a CA56      		subi r28,106
 235 014c DF4F      		sbci r29,-1
 236               	.LVL5:
 237 014e 2883      		st Y,r18
 238 0150 00C0      		rjmp .L1
 239               	.LVL6:
 240               	.L6:
 220:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 221:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_HALT_MSG:
 222:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = false;
 241               		.loc 1 222 0
 242 0152 FE01      		movw r30,r28
 243 0154 EB56      		subi r30,107
 244 0156 FF4F      		sbci r31,-1
 245 0158 1082      		st Z,__zero_reg__
 223:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 224:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			MessageHeader->MessageLength                = CPU_TO_LE32(0);
 246               		.loc 1 224 0
 247 015a 198E      		std Y+25,__zero_reg__
 248 015c 1A8E      		std Y+26,__zero_reg__
 249 015e 1B8E      		std Y+27,__zero_reg__
 250 0160 1C8E      		std Y+28,__zero_reg__
 225:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 226:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.CurrRNDISState    = RNDIS_Uninitialized;
 251               		.loc 1 226 0
 252 0162 CA56      		subi r28,106
 253 0164 DF4F      		sbci r29,-1
 254               	.LVL7:
 255 0166 1882      		st Y,__zero_reg__
 256 0168 00C0      		rjmp .L1
 257               	.LVL8:
 258               	.L7:
 227:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 228:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_QUERY_MSG:
 229:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 259               		.loc 1 229 0
 260 016a FE01      		movw r30,r28
 261 016c EB56      		subi r30,107
 262 016e FF4F      		sbci r31,-1
 263 0170 81E0      		ldi r24,lo8(1)
 264 0172 8083      		st Z,r24
 265               	.LVL9:
 230:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 231:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Query_Message_t*  QUERY_Message       = (RNDIS_Query_Message_t*)&RNDISInterfaceInfo->State
 232:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Query_Complete_t* QUERY_Response      = (RNDIS_Query_Complete_t*)&RNDISInterfaceInfo->Stat
 233:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			uint32_t                Query_Oid           = CPU_TO_LE32(QUERY_Message->Oid);
 266               		.loc 1 233 0
 267 0174 49A1      		ldd r20,Y+33
 268 0176 5AA1      		ldd r21,Y+34
 269 0178 6BA1      		ldd r22,Y+35
 270 017a 7CA1      		ldd r23,Y+36
 271               	.LVL10:
 234:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 235:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			void*    QueryData    = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Message_Heade
 236:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                                      le32_to_cpu(QUERY_Message-
 237:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			void*    ResponseData = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Query_Complet
 272               		.loc 1 237 0
 273 017c DE01      		movw r26,r28
 274 017e 9D96      		adiw r26,45
 275               	.LVL11:
 238:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			uint16_t ResponseSize;
 239:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 240:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			QUERY_Response->MessageType                 = CPU_TO_LE32(REMOTE_NDIS_QUERY_CMPLT);
 276               		.loc 1 240 0
 277 0180 04E0      		ldi r16,lo8(4)
 278 0182 10E0      		ldi r17,0
 279 0184 20E0      		ldi r18,0
 280 0186 30E8      		ldi r19,lo8(-128)
 281 0188 0D8B      		std Y+21,r16
 282 018a 1E8B      		std Y+22,r17
 283 018c 2F8B      		std Y+23,r18
 284 018e 388F      		std Y+24,r19
 285               	.LVL12:
 286               	.LBB71:
 287               	.LBB72:
 241:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 242:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			if (RNDIS_Device_ProcessNDISQuery(RNDISInterfaceInfo, Query_Oid, QueryData, le32_to_cpu(QUERY_Me
 243:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                  ResponseData, &ResponseSize))
 244:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
 245:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 246:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->MessageLength           = cpu_to_le32(sizeof(RNDIS_Query_Complete_t) + Response
 247:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 248:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferLength = CPU_TO_LE32(ResponseSize);
 249:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferOffset = CPU_TO_LE32(sizeof(RNDIS_Query_Complete_t) - sizeof(R
 250:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			}
 251:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			else
 252:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
 253:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_NOT_SUPPORTED);
 254:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->MessageLength           = CPU_TO_LE32(sizeof(RNDIS_Query_Complete_t));
 255:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 256:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferLength = CPU_TO_LE32(0);
 257:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferOffset = CPU_TO_LE32(0);
 258:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			}
 259:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 260:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 261:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_SET_MSG:
 262:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 263:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 264:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Set_Message_t*  SET_Message           = (RNDIS_Set_Message_t*)&RNDISInterfaceInfo->State.R
 265:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Set_Complete_t* SET_Response          = (RNDIS_Set_Complete_t*)&RNDISInterfaceInfo->State.
 266:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			uint32_t              SET_Oid               = le32_to_cpu(SET_Message->Oid);
 267:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 268:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->MessageType                   = CPU_TO_LE32(REMOTE_NDIS_SET_CMPLT);
 269:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->MessageLength                 = CPU_TO_LE32(sizeof(RNDIS_Set_Complete_t));
 270:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->RequestId                     = SET_Message->RequestId;
 271:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 272:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			void* SetData = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Message_Header_t) +
 273:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                              le32_to_cpu(SET_Message->Informati
 274:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 275:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->Status = RNDIS_Device_ProcessNDISSet(RNDISInterfaceInfo, SET_Oid, SetData,
 276:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                   le32_to_cpu(SET_Message->InformationBufferLen
 277:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                   REMOTE_NDIS_STATUS_SUCCESS : REMOTE_NDIS_STAT
 278:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 279:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_RESET_MSG:
 280:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 281:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 282:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Reset_Complete_t* RESET_Response      = (RNDIS_Reset_Complete_t*)&RNDISInterfaceInfo->Stat
 283:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 284:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->MessageType                 = CPU_TO_LE32(REMOTE_NDIS_RESET_CMPLT);
 285:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->MessageLength               = CPU_TO_LE32(sizeof(RNDIS_Reset_Complete_t));
 286:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->Status                      = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 287:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->AddressingReset             = CPU_TO_LE32(0);
 288:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 289:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 290:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_KEEPALIVE_MSG:
 291:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 292:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 293:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_KeepAlive_Message_t*  KEEPALIVE_Message  =
 294:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                (RNDIS_KeepAlive_Message_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 295:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_KeepAlive_Complete_t* KEEPALIVE_Response =
 296:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                (RNDIS_KeepAlive_Complete_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 297:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 298:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->MessageType             = CPU_TO_LE32(REMOTE_NDIS_KEEPALIVE_CMPLT);
 299:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->MessageLength           = CPU_TO_LE32(sizeof(RNDIS_KeepAlive_Complete_t));
 300:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->RequestId               = KEEPALIVE_Message->RequestId;
 301:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 302:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 303:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 304:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 305:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 306:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 307:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** static bool RNDIS_Device_ProcessNDISQuery(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 308:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                           const uint32_t OId,
 309:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                           void* const QueryData,
 310:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                           const uint16_t QuerySize,
 311:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                           void* ResponseData,
 312:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                           uint16_t* const ResponseSize)
 313:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 314:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	(void)QueryData;
 315:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	(void)QuerySize;
 316:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 317:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	switch (OId)
 288               		.loc 1 317 0
 289 0190 4E30      		cpi r20,14
 290 0192 81E0      		ldi r24,1
 291 0194 5807      		cpc r21,r24
 292 0196 6807      		cpc r22,r24
 293 0198 7105      		cpc r23,__zero_reg__
 294 019a 01F4      		brne .+2
 295 019c 00C0      		rjmp .L20
 296 019e 00F0      		brlo .+2
 297 01a0 00C0      		rjmp .L27
 298 01a2 4630      		cpi r20,6
 299 01a4 F1E0      		ldi r31,1
 300 01a6 5F07      		cpc r21,r31
 301 01a8 6F07      		cpc r22,r31
 302 01aa 7105      		cpc r23,__zero_reg__
 303 01ac 01F4      		brne .+2
 304 01ae 00C0      		rjmp .L16
 305 01b0 00F4      		brsh .L28
 306 01b2 4230      		cpi r20,2
 307 01b4 E1E0      		ldi r30,1
 308 01b6 5E07      		cpc r21,r30
 309 01b8 6E07      		cpc r22,r30
 310 01ba 7105      		cpc r23,__zero_reg__
 311 01bc 01F4      		brne .+2
 312 01be 00C0      		rjmp .L24
 313 01c0 00F4      		brsh .L29
 314 01c2 4130      		cpi r20,1
 315 01c4 5140      		sbci r21,1
 316 01c6 6140      		sbci r22,1
 317 01c8 7105      		cpc r23,__zero_reg__
 318 01ca 01F0      		breq .+2
 319 01cc 00C0      		rjmp .L12
 320 01ce 00C0      		rjmp .L13
 321               	.L29:
 322 01d0 4530      		cpi r20,5
 323 01d2 5140      		sbci r21,1
 324 01d4 6140      		sbci r22,1
 325 01d6 7105      		cpc r23,__zero_reg__
 326 01d8 00F0      		brlo .+2
 327 01da 00C0      		rjmp .L12
 328 01dc 00C0      		rjmp .L24
 329               	.L28:
 330 01de 4C30      		cpi r20,12
 331 01e0 F1E0      		ldi r31,1
 332 01e2 5F07      		cpc r21,r31
 333 01e4 6F07      		cpc r22,r31
 334 01e6 7105      		cpc r23,__zero_reg__
 335 01e8 00F4      		brsh .L30
 336 01ea 4A30      		cpi r20,10
 337 01ec 81E0      		ldi r24,1
 338 01ee 5807      		cpc r21,r24
 339 01f0 6807      		cpc r22,r24
 340 01f2 7105      		cpc r23,__zero_reg__
 341 01f4 00F0      		brlo .+2
 342 01f6 00C0      		rjmp .L16
 343 01f8 4730      		cpi r20,7
 344 01fa 5140      		sbci r21,1
 345 01fc 6140      		sbci r22,1
 346 01fe 7105      		cpc r23,__zero_reg__
 347 0200 01F0      		breq .+2
 348 0202 00C0      		rjmp .L12
 349 0204 00C0      		rjmp .L17
 350               	.L30:
 351 0206 4C30      		cpi r20,12
 352 0208 F1E0      		ldi r31,1
 353 020a 5F07      		cpc r21,r31
 354 020c 6F07      		cpc r22,r31
 355 020e 7105      		cpc r23,__zero_reg__
 356 0210 01F4      		brne .+2
 357 0212 00C0      		rjmp .L18
 358 0214 4D30      		cpi r20,13
 359 0216 5140      		sbci r21,1
 360 0218 6140      		sbci r22,1
 361 021a 7105      		cpc r23,__zero_reg__
 362 021c 01F0      		breq .+2
 363 021e 00C0      		rjmp .L12
 364 0220 00C0      		rjmp .L19
 365               	.L27:
 366 0222 4630      		cpi r20,6
 367 0224 E1E0      		ldi r30,1
 368 0226 5E07      		cpc r21,r30
 369 0228 E2E0      		ldi r30,2
 370 022a 6E07      		cpc r22,r30
 371 022c 7105      		cpc r23,__zero_reg__
 372 022e 00F4      		brsh .L31
 373 0230 4130      		cpi r20,1
 374 0232 F1E0      		ldi r31,1
 375 0234 5F07      		cpc r21,r31
 376 0236 F2E0      		ldi r31,2
 377 0238 6F07      		cpc r22,r31
 378 023a 7105      		cpc r23,__zero_reg__
 379 023c 00F0      		brlo .+2
 380 023e 00C0      		rjmp .L24
 381 0240 4431      		cpi r20,20
 382 0242 81E0      		ldi r24,1
 383 0244 5807      		cpc r21,r24
 384 0246 6807      		cpc r22,r24
 385 0248 7105      		cpc r23,__zero_reg__
 386 024a 01F4      		brne .+2
 387 024c 00C0      		rjmp .L24
 388 024e 4230      		cpi r20,2
 389 0250 E2E0      		ldi r30,2
 390 0252 5E07      		cpc r21,r30
 391 0254 E1E0      		ldi r30,1
 392 0256 6E07      		cpc r22,r30
 393 0258 7105      		cpc r23,__zero_reg__
 394 025a 01F4      		brne .+2
 395 025c 00C0      		rjmp .L24
 396 025e 4131      		cpi r20,17
 397 0260 5140      		sbci r21,1
 398 0262 6140      		sbci r22,1
 399 0264 7105      		cpc r23,__zero_reg__
 400 0266 01F0      		breq .+2
 401 0268 00C0      		rjmp .L12
 402 026a 00C0      		rjmp .L21
 403               	.L31:
 404 026c 4430      		cpi r20,4
 405 026e 81E0      		ldi r24,1
 406 0270 5807      		cpc r21,r24
 407 0272 6807      		cpc r22,r24
 408 0274 7807      		cpc r23,r24
 409 0276 01F4      		brne .+2
 410 0278 00C0      		rjmp .L26
 411 027a 00F4      		brsh .L32
 412 027c 4150      		subi r20,1
 413 027e 5140      		sbci r21,1
 414 0280 6140      		sbci r22,1
 415 0282 7140      		sbci r23,1
 416               	.LVL13:
 417 0284 4230      		cpi r20,2
 418 0286 5105      		cpc r21,__zero_reg__
 419 0288 6105      		cpc r22,__zero_reg__
 420 028a 7105      		cpc r23,__zero_reg__
 421 028c 00F0      		brlo .+2
 422 028e 00C0      		rjmp .L12
 423 0290 00C0      		rjmp .L49
 424               	.LVL14:
 425               	.L32:
 426 0292 4150      		subi r20,1
 427 0294 5140      		sbci r21,1
 428 0296 6240      		sbci r22,2
 429 0298 7140      		sbci r23,1
 430               	.LVL15:
 431 029a 4330      		cpi r20,3
 432 029c 5105      		cpc r21,__zero_reg__
 433 029e 6105      		cpc r22,__zero_reg__
 434 02a0 7105      		cpc r23,__zero_reg__
 435 02a2 00F0      		brlo .+2
 436 02a4 00C0      		rjmp .L12
 437 02a6 00C0      		rjmp .L24
 438               	.LVL16:
 439               	.L13:
 318:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 319:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_SUPPORTED_LIST:
 320:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(AdapterSupportedOIDList);
 321:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 322:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			memcpy_P(ResponseData, AdapterSupportedOIDList, sizeof(AdapterSupportedOIDList));
 440               		.loc 1 322 0
 441 02a8 4CE6      		ldi r20,lo8(108)
 442 02aa 50E0      		ldi r21,0
 443               	.LVL17:
 444 02ac 60E0      		ldi r22,lo8(AdapterSupportedOIDList)
 445 02ae 70E0      		ldi r23,hi8(AdapterSupportedOIDList)
 446 02b0 CD01      		movw r24,r26
 447 02b2 0E94 0000 		call memcpy_P
 448               	.LVL18:
 320:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(AdapterSupportedOIDList);
 449               		.loc 1 320 0
 450 02b6 0CE6      		ldi r16,lo8(108)
 451 02b8 10E0      		ldi r17,0
 452 02ba 00C0      		rjmp .L33
 453               	.LVL19:
 454               	.L18:
 323:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 324:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 325:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_PHYSICAL_MEDIUM:
 326:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 327:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 328:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Indicate that the device is a true ethernet link */
 329:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(0);
 330:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 331:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 332:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_HARDWARE_STATUS:
 333:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 334:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 335:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(NDIS_HardwareStatus_Ready);
 336:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 337:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 338:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_MEDIA_SUPPORTED:
 339:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_MEDIA_IN_USE:
 340:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 341:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 342:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(REMOTE_NDIS_MEDIUM_802_3);
 343:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 344:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 345:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_VENDOR_ID:
 346:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 347:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 348:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Vendor ID 0x0xFFFFFF is reserved for vendors who have not purchased a NDIS VID */
 349:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(0x00FFFFFF);
 455               		.loc 1 349 0
 456 02bc 8FEF      		ldi r24,lo8(-1)
 457 02be 9FEF      		ldi r25,lo8(-1)
 458 02c0 AFEF      		ldi r26,lo8(-1)
 459 02c2 B0E0      		ldi r27,0
 460 02c4 8DA7      		std Y+45,r24
 461 02c6 9EA7      		std Y+46,r25
 462 02c8 AFA7      		std Y+47,r26
 463 02ca B8AB      		std Y+48,r27
 464 02cc 00C0      		rjmp .L51
 465               	.LVL20:
 466               	.L16:
 350:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 351:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 352:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_MAXIMUM_FRAME_SIZE:
 353:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_TRANSMIT_BLOCK_SIZE:
 354:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_RECEIVE_BLOCK_SIZE:
 355:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 356:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 357:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(ETHERNET_FRAME_SIZE_MAX);
 467               		.loc 1 357 0
 468 02ce 4CED      		ldi r20,lo8(-36)
 469 02d0 55E0      		ldi r21,lo8(5)
 470 02d2 60E0      		ldi r22,0
 471 02d4 70E0      		ldi r23,0
 472               	.LVL21:
 473 02d6 00C0      		rjmp .L52
 474               	.LVL22:
 475               	.L19:
 358:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 359:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 360:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_VENDOR_DESCRIPTION:
 361:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = (strlen(RNDISInterfaceInfo->Config.AdapterVendorDescription) + 1);
 476               		.loc 1 361 0
 477 02d8 6D85      		ldd r22,Y+13
 478 02da 7E85      		ldd r23,Y+14
 479 02dc CB01      		movw r24,r22
 480 02de FC01      		movw r30,r24
 481               		0:
 482 02e0 0190      		ld __tmp_reg__,Z+
 483 02e2 0020      		tst __tmp_reg__
 484 02e4 01F4      		brne 0b
 485 02e6 8F01      		movw r16,r30
 486 02e8 081B      		sub r16,r24
 487 02ea 190B      		sbc r17,r25
 488               	.LVL23:
 362:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 363:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			memcpy(ResponseData, RNDISInterfaceInfo->Config.AdapterVendorDescription, *ResponseSize);
 489               		.loc 1 363 0
 490 02ec A801      		movw r20,r16
 491               	.LVL24:
 492 02ee CD01      		movw r24,r26
 493 02f0 0E94 0000 		call memcpy
 494               	.LVL25:
 495 02f4 00C0      		rjmp .L33
 496               	.LVL26:
 497               	.L17:
 364:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 365:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 366:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_MEDIA_CONNECT_STATUS:
 367:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 368:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 369:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(REMOTE_NDIS_MEDIA_STATE_CONNECTED);
 370:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 371:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 372:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_LINK_SPEED:
 373:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 374:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 375:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Indicate 10Mb/s link speed */
 376:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(100000);
 498               		.loc 1 376 0
 499 02f6 40EA      		ldi r20,lo8(-96)
 500 02f8 56E8      		ldi r21,lo8(-122)
 501 02fa 61E0      		ldi r22,lo8(1)
 502 02fc 70E0      		ldi r23,0
 503               	.LVL27:
 504 02fe 00C0      		rjmp .L52
 505               	.LVL28:
 506               	.L49:
 377:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 378:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 379:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_PERMANENT_ADDRESS:
 380:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_CURRENT_ADDRESS:
 381:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(MAC_Address_t);
 382:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 383:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			memcpy(ResponseData, &RNDISInterfaceInfo->Config.AdapterMACAddress, sizeof(MAC_Address_t));
 507               		.loc 1 383 0
 508 0300 FE01      		movw r30,r28
 509 0302 3F96      		adiw r30,15
 510 0304 86E0      		ldi r24,lo8(6)
 511               		0:
 512 0306 0190      		ld r0,Z+
 513 0308 0D92      		st X+,r0
 514 030a 8A95      		dec r24
 515 030c 01F4      		brne 0b
 516               	.LVL29:
 381:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(MAC_Address_t);
 517               		.loc 1 381 0
 518 030e 06E0      		ldi r16,lo8(6)
 519 0310 10E0      		ldi r17,0
 520 0312 00C0      		rjmp .L33
 521               	.LVL30:
 522               	.L26:
 384:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 385:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 386:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_MAXIMUM_LIST_SIZE:
 387:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 388:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 389:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Indicate only one multicast address supported */
 390:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(1);
 523               		.loc 1 390 0
 524 0314 41E0      		ldi r20,lo8(1)
 525 0316 50E0      		ldi r21,0
 526 0318 60E0      		ldi r22,0
 527 031a 70E0      		ldi r23,0
 528               	.LVL31:
 529 031c 00C0      		rjmp .L52
 530               	.LVL32:
 531               	.L20:
 391:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 392:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 393:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_CURRENT_PACKET_FILTER:
 394:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 395:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 396:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = cpu_to_le32(RNDISInterfaceInfo->State.CurrPacketFilter);
 532               		.loc 1 396 0
 533 031e FE01      		movw r30,r28
 534 0320 E956      		subi r30,105
 535 0322 FF4F      		sbci r31,-1
 536 0324 4081      		ld r20,Z
 537 0326 5181      		ldd r21,Z+1
 538 0328 6281      		ldd r22,Z+2
 539 032a 7381      		ldd r23,Z+3
 540               	.LVL33:
 541 032c 00C0      		rjmp .L52
 542               	.LVL34:
 543               	.L24:
 397:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 398:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 399:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_XMIT_OK:
 400:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_RCV_OK:
 401:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_XMIT_ERROR:
 402:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_RCV_ERROR:
 403:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_RCV_NO_BUFFER:
 404:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_RCV_ERROR_ALIGNMENT:
 405:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_XMIT_ONE_COLLISION:
 406:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_XMIT_MORE_COLLISIONS:
 407:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 408:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 409:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Unused statistic OIDs - always return 0 for each */
 410:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(0);
 544               		.loc 1 410 0
 545 032e 1DA6      		std Y+45,__zero_reg__
 546 0330 1EA6      		std Y+46,__zero_reg__
 547 0332 1FA6      		std Y+47,__zero_reg__
 548 0334 18AA      		std Y+48,__zero_reg__
 549 0336 00C0      		rjmp .L51
 550               	.LVL35:
 551               	.L21:
 411:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 412:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 413:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_MAXIMUM_TOTAL_SIZE:
 414:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 415:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 416:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Indicate maximum overall buffer (Ethernet frame and RNDIS header) the adapter can handle */
 417:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(RNDIS_MESSAGE_BUFFER_SIZE + ETHERNET_FRAME_SIZE_MAX);
 552               		.loc 1 417 0
 553 0338 4CE5      		ldi r20,lo8(92)
 554 033a 56E0      		ldi r21,lo8(6)
 555 033c 60E0      		ldi r22,0
 556 033e 70E0      		ldi r23,0
 557               	.LVL36:
 558               	.L52:
 559 0340 4DA7      		std Y+45,r20
 560 0342 5EA7      		std Y+46,r21
 561 0344 6FA7      		std Y+47,r22
 562 0346 78AB      		std Y+48,r23
 563               	.L51:
 414:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 564               		.loc 1 414 0
 565 0348 04E0      		ldi r16,lo8(4)
 566 034a 10E0      		ldi r17,0
 567 034c 00C0      		rjmp .L33
 568               	.LVL37:
 569               	.L8:
 570               	.LBE72:
 571               	.LBE71:
 262:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 572               		.loc 1 262 0
 573 034e FE01      		movw r30,r28
 574 0350 EB56      		subi r30,107
 575 0352 FF4F      		sbci r31,-1
 576 0354 81E0      		ldi r24,lo8(1)
 577 0356 8083      		st Z,r24
 578               	.LVL38:
 266:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			uint32_t              SET_Oid               = le32_to_cpu(SET_Message->Oid);
 579               		.loc 1 266 0
 580 0358 49A1      		ldd r20,Y+33
 581 035a 5AA1      		ldd r21,Y+34
 582 035c 6BA1      		ldd r22,Y+35
 583 035e 7CA1      		ldd r23,Y+36
 584               	.LVL39:
 268:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->MessageType                   = CPU_TO_LE32(REMOTE_NDIS_SET_CMPLT);
 585               		.loc 1 268 0
 586 0360 05E0      		ldi r16,lo8(5)
 587 0362 10E0      		ldi r17,0
 588 0364 20E0      		ldi r18,0
 589 0366 30E8      		ldi r19,lo8(-128)
 590 0368 0D8B      		std Y+21,r16
 591 036a 1E8B      		std Y+22,r17
 592 036c 2F8B      		std Y+23,r18
 593 036e 388F      		std Y+24,r19
 269:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->MessageLength                 = CPU_TO_LE32(sizeof(RNDIS_Set_Complete_t));
 594               		.loc 1 269 0
 595 0370 00E1      		ldi r16,lo8(16)
 596 0372 10E0      		ldi r17,0
 597 0374 20E0      		ldi r18,0
 598 0376 30E0      		ldi r19,0
 599 0378 098F      		std Y+25,r16
 600 037a 1A8F      		std Y+26,r17
 601 037c 2B8F      		std Y+27,r18
 602 037e 3C8F      		std Y+28,r19
 273:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                              le32_to_cpu(SET_Message->Informati
 603               		.loc 1 273 0
 604 0380 09A5      		ldd r16,Y+41
 605 0382 1AA5      		ldd r17,Y+42
 606 0384 2BA5      		ldd r18,Y+43
 607 0386 3CA5      		ldd r19,Y+44
 608               	.LVL40:
 609               	.LBB73:
 610               	.LBB74:
 418:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 419:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 420:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		default:
 421:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return false;
 422:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 423:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 424:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 425:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** static bool RNDIS_Device_ProcessNDISSet(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 426:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                         const uint32_t OId,
 427:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                         const void* SetData,
 428:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                         const uint16_t SetSize)
 429:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 430:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	(void)SetSize;
 431:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 432:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	switch (OId)
 611               		.loc 1 432 0
 612 0388 4E30      		cpi r20,14
 613 038a F1E0      		ldi r31,1
 614 038c 5F07      		cpc r21,r31
 615 038e 6F07      		cpc r22,r31
 616 0390 7105      		cpc r23,__zero_reg__
 617 0392 01F0      		breq .L35
 618 0394 4330      		cpi r20,3
 619 0396 5140      		sbci r21,1
 620 0398 6140      		sbci r22,1
 621 039a 7140      		sbci r23,1
 622 039c 01F4      		brne .L50
 623 039e 00C0      		rjmp .L36
 624               	.L35:
 625               	.LBE74:
 626               	.LBE73:
 272:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			void* SetData = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Message_Header_t) +
 627               		.loc 1 272 0
 628 03a0 B901      		movw r22,r18
 629 03a2 A801      		movw r20,r16
 630               	.LVL41:
 631 03a4 485F      		subi r20,-8
 632 03a6 5F4F      		sbci r21,-1
 633 03a8 6F4F      		sbci r22,-1
 634 03aa 7F4F      		sbci r23,-1
 635               	.LBB76:
 636               	.LBB75:
 433:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 434:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_CURRENT_PACKET_FILTER:
 435:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.CurrPacketFilter = le32_to_cpu(*((uint32_t*)SetData));
 637               		.loc 1 435 0
 638 03ac FE01      		movw r30,r28
 639 03ae E40F      		add r30,r20
 640 03b0 F51F      		adc r31,r21
 641 03b2 4589      		ldd r20,Z+21
 642 03b4 5689      		ldd r21,Z+22
 643 03b6 6789      		ldd r22,Z+23
 644 03b8 708D      		ldd r23,Z+24
 645 03ba FE01      		movw r30,r28
 646 03bc E956      		subi r30,105
 647 03be FF4F      		sbci r31,-1
 648 03c0 4083      		st Z,r20
 649 03c2 5183      		std Z+1,r21
 650 03c4 6283      		std Z+2,r22
 651 03c6 7383      		std Z+3,r23
 436:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.CurrRNDISState   = le32_to_cpu((RNDISInterfaceInfo->State.CurrPacketFi
 652               		.loc 1 436 0
 653 03c8 FE01      		movw r30,r28
 654 03ca EA56      		subi r30,106
 655 03cc FF4F      		sbci r31,-1
 656 03ce 82E0      		ldi r24,lo8(2)
 657 03d0 8083      		st Z,r24
 658 03d2 00C0      		rjmp .L36
 659               	.LVL42:
 660               	.L50:
 277:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                   REMOTE_NDIS_STATUS_SUCCESS : REMOTE_NDIS_STAT
 661               		.loc 1 277 0
 662 03d4 4BEB      		ldi r20,lo8(-69)
 663 03d6 50E0      		ldi r21,0
 664 03d8 60E0      		ldi r22,0
 665 03da 70EC      		ldi r23,lo8(-64)
 666               	.LVL43:
 667               	.L34:
 668               	.LBE75:
 669               	.LBE76:
 275:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->Status = RNDIS_Device_ProcessNDISSet(RNDISInterfaceInfo, SET_Oid, SetData,
 670               		.loc 1 275 0
 671 03dc 49A3      		std Y+33,r20
 672 03de 5AA3      		std Y+34,r21
 673 03e0 6BA3      		std Y+35,r22
 674 03e2 7CA3      		std Y+36,r23
 675 03e4 00C0      		rjmp .L1
 676               	.LVL44:
 677               	.L9:
 280:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 678               		.loc 1 280 0
 679 03e6 FE01      		movw r30,r28
 680 03e8 EB56      		subi r30,107
 681 03ea FF4F      		sbci r31,-1
 682 03ec 81E0      		ldi r24,lo8(1)
 683 03ee 8083      		st Z,r24
 684               	.LVL45:
 284:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->MessageType                 = CPU_TO_LE32(REMOTE_NDIS_RESET_CMPLT);
 685               		.loc 1 284 0
 686 03f0 46E0      		ldi r20,lo8(6)
 687 03f2 50E0      		ldi r21,0
 688 03f4 60E0      		ldi r22,0
 689 03f6 70E8      		ldi r23,lo8(-128)
 690 03f8 4D8B      		std Y+21,r20
 691 03fa 5E8B      		std Y+22,r21
 692 03fc 6F8B      		std Y+23,r22
 693 03fe 788F      		std Y+24,r23
 285:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->MessageLength               = CPU_TO_LE32(sizeof(RNDIS_Reset_Complete_t));
 694               		.loc 1 285 0
 695 0400 40E1      		ldi r20,lo8(16)
 696 0402 50E0      		ldi r21,0
 697 0404 60E0      		ldi r22,0
 698 0406 70E0      		ldi r23,0
 699 0408 498F      		std Y+25,r20
 700 040a 5A8F      		std Y+26,r21
 701 040c 6B8F      		std Y+27,r22
 702 040e 7C8F      		std Y+28,r23
 286:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->Status                      = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 703               		.loc 1 286 0
 704 0410 1D8E      		std Y+29,__zero_reg__
 705 0412 1E8E      		std Y+30,__zero_reg__
 706 0414 1F8E      		std Y+31,__zero_reg__
 707 0416 18A2      		std Y+32,__zero_reg__
 708 0418 00C0      		rjmp .L53
 709               	.LVL46:
 710               	.L10:
 291:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 711               		.loc 1 291 0
 712 041a FE01      		movw r30,r28
 713 041c EB56      		subi r30,107
 714 041e FF4F      		sbci r31,-1
 715 0420 81E0      		ldi r24,lo8(1)
 716 0422 8083      		st Z,r24
 717               	.LVL47:
 298:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->MessageType             = CPU_TO_LE32(REMOTE_NDIS_KEEPALIVE_CMPLT);
 718               		.loc 1 298 0
 719 0424 48E0      		ldi r20,lo8(8)
 720 0426 50E0      		ldi r21,0
 721 0428 60E0      		ldi r22,0
 722 042a 70E8      		ldi r23,lo8(-128)
 723 042c 4D8B      		std Y+21,r20
 724 042e 5E8B      		std Y+22,r21
 725 0430 6F8B      		std Y+23,r22
 726 0432 788F      		std Y+24,r23
 299:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->MessageLength           = CPU_TO_LE32(sizeof(RNDIS_KeepAlive_Complete_t));
 727               		.loc 1 299 0
 728 0434 40E1      		ldi r20,lo8(16)
 729 0436 50E0      		ldi r21,0
 730 0438 60E0      		ldi r22,0
 731 043a 70E0      		ldi r23,0
 732 043c 498F      		std Y+25,r20
 733 043e 5A8F      		std Y+26,r21
 734 0440 6B8F      		std Y+27,r22
 735 0442 7C8F      		std Y+28,r23
 736               	.LVL48:
 737               	.L53:
 301:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 738               		.loc 1 301 0
 739 0444 19A2      		std Y+33,__zero_reg__
 740 0446 1AA2      		std Y+34,__zero_reg__
 741 0448 1BA2      		std Y+35,__zero_reg__
 742 044a 1CA2      		std Y+36,__zero_reg__
 743 044c 00C0      		rjmp .L1
 744               	.LVL49:
 745               	.L4:
 746               	.LBE70:
 747               	.LBE69:
 748               	.LBE68:
  93:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
 749               		.loc 1 93 0
 750 044e 8091 0000 		lds r24,USB_ControlRequest
 751 0452 813A      		cpi r24,lo8(-95)
 752 0454 01F0      		breq .+2
 753 0456 00C0      		rjmp .L1
 754               	.LVL50:
 755               	.LBB79:
  97:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				if (!(MessageHeader->MessageLength))
 756               		.loc 1 97 0
 757 0458 498D      		ldd r20,Y+25
 758 045a 5A8D      		ldd r21,Y+26
 759 045c 6B8D      		ldd r22,Y+27
 760 045e 7C8D      		ldd r23,Y+28
 761 0460 452B      		or r20,r21
 762 0462 462B      		or r20,r22
 763 0464 472B      		or r20,r23
 764 0466 01F4      		brne .L37
  99:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 					RNDISInterfaceInfo->State.RNDISMessageBuffer[0] = 0;
 765               		.loc 1 99 0
 766 0468 1D8A      		std Y+21,__zero_reg__
 100:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 					MessageHeader->MessageLength                    = CPU_TO_LE32(1);
 767               		.loc 1 100 0
 768 046a 41E0      		ldi r20,lo8(1)
 769 046c 50E0      		ldi r21,0
 770 046e 60E0      		ldi r22,0
 771 0470 70E0      		ldi r23,0
 772 0472 498F      		std Y+25,r20
 773 0474 5A8F      		std Y+26,r21
 774 0476 6B8F      		std Y+27,r22
 775 0478 7C8F      		std Y+28,r23
 776               	.L37:
 777               	.LBB80:
 778               	.LBB81:
 508:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 779               		.loc 2 508 0
 780 047a 8091 E800 		lds r24,232
 781 047e 877F      		andi r24,lo8(-9)
 782 0480 8093 E800 		sts 232,r24
 783               	.LBE81:
 784               	.LBE80:
 104:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_Write_Control_Stream_LE(RNDISInterfaceInfo->State.RNDISMessageBuffer, le32_to_cpu(Mess
 785               		.loc 1 104 0
 786 0484 698D      		ldd r22,Y+25
 787 0486 7A8D      		ldd r23,Y+26
 788 0488 CE01      		movw r24,r28
 789 048a 4596      		adiw r24,21
 790 048c 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 791               	.LVL51:
 792               	.LBB82:
 793               	.LBB83:
 521:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 522:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 523:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 524:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 525:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 526:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 527:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 528:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 529:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 530:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 531:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 532:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 533:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 534:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 535:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 794               		.loc 2 535 0
 795 0490 8091 E800 		lds r24,232
 796 0494 8B77      		andi r24,lo8(123)
 797 0496 8093 E800 		sts 232,r24
 798               	.LBE83:
 799               	.LBE82:
 107:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				MessageHeader->MessageLength = CPU_TO_LE32(0);
 800               		.loc 1 107 0
 801 049a 198E      		std Y+25,__zero_reg__
 802 049c 1A8E      		std Y+26,__zero_reg__
 803 049e 1B8E      		std Y+27,__zero_reg__
 804 04a0 1C8E      		std Y+28,__zero_reg__
 805 04a2 00C0      		rjmp .L1
 806               	.LVL52:
 807               	.L33:
 808               	.LBE79:
 809               	.LBB84:
 810               	.LBB78:
 811               	.LBB77:
 245:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 812               		.loc 1 245 0
 813 04a4 19A2      		std Y+33,__zero_reg__
 814 04a6 1AA2      		std Y+34,__zero_reg__
 815 04a8 1BA2      		std Y+35,__zero_reg__
 816 04aa 1CA2      		std Y+36,__zero_reg__
 246:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->MessageLength           = cpu_to_le32(sizeof(RNDIS_Query_Complete_t) + Response
 817               		.loc 1 246 0
 818 04ac C801      		movw r24,r16
 819 04ae 4896      		adiw r24,24
 820 04b0 A0E0      		ldi r26,0
 821 04b2 B0E0      		ldi r27,0
 822 04b4 898F      		std Y+25,r24
 823 04b6 9A8F      		std Y+26,r25
 824 04b8 AB8F      		std Y+27,r26
 825 04ba BC8F      		std Y+28,r27
 248:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferLength = CPU_TO_LE32(ResponseSize);
 826               		.loc 1 248 0
 827 04bc A801      		movw r20,r16
 828 04be 60E0      		ldi r22,0
 829 04c0 70E0      		ldi r23,0
 830 04c2 4DA3      		std Y+37,r20
 831 04c4 5EA3      		std Y+38,r21
 832 04c6 6FA3      		std Y+39,r22
 833 04c8 78A7      		std Y+40,r23
 249:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferOffset = CPU_TO_LE32(sizeof(RNDIS_Query_Complete_t) - sizeof(R
 834               		.loc 1 249 0
 835 04ca 40E1      		ldi r20,lo8(16)
 836 04cc 50E0      		ldi r21,0
 837 04ce 60E0      		ldi r22,0
 838 04d0 70E0      		ldi r23,0
 839 04d2 49A7      		std Y+41,r20
 840 04d4 5AA7      		std Y+42,r21
 841 04d6 6BA7      		std Y+43,r22
 842 04d8 7CA7      		std Y+44,r23
 843 04da 00C0      		rjmp .L1
 844               	.LVL53:
 845               	.L12:
 253:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_NOT_SUPPORTED);
 846               		.loc 1 253 0
 847 04dc 4BEB      		ldi r20,lo8(-69)
 848 04de 50E0      		ldi r21,0
 849 04e0 60E0      		ldi r22,0
 850 04e2 70EC      		ldi r23,lo8(-64)
 851 04e4 49A3      		std Y+33,r20
 852 04e6 5AA3      		std Y+34,r21
 853 04e8 6BA3      		std Y+35,r22
 854 04ea 7CA3      		std Y+36,r23
 254:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->MessageLength           = CPU_TO_LE32(sizeof(RNDIS_Query_Complete_t));
 855               		.loc 1 254 0
 856 04ec 48E1      		ldi r20,lo8(24)
 857 04ee 50E0      		ldi r21,0
 858 04f0 60E0      		ldi r22,0
 859 04f2 70E0      		ldi r23,0
 860 04f4 498F      		std Y+25,r20
 861 04f6 5A8F      		std Y+26,r21
 862 04f8 6B8F      		std Y+27,r22
 863 04fa 7C8F      		std Y+28,r23
 256:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferLength = CPU_TO_LE32(0);
 864               		.loc 1 256 0
 865 04fc 1DA2      		std Y+37,__zero_reg__
 866 04fe 1EA2      		std Y+38,__zero_reg__
 867 0500 1FA2      		std Y+39,__zero_reg__
 868 0502 18A6      		std Y+40,__zero_reg__
 257:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferOffset = CPU_TO_LE32(0);
 869               		.loc 1 257 0
 870 0504 19A6      		std Y+41,__zero_reg__
 871 0506 1AA6      		std Y+42,__zero_reg__
 872 0508 1BA6      		std Y+43,__zero_reg__
 873 050a 1CA6      		std Y+44,__zero_reg__
 874 050c 00C0      		rjmp .L1
 875               	.LVL54:
 876               	.L36:
 877               	.LBE77:
 878               	.LBE78:
 879               	.LBE84:
 277:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                   REMOTE_NDIS_STATUS_SUCCESS : REMOTE_NDIS_STAT
 880               		.loc 1 277 0
 881 050e 40E0      		ldi r20,0
 882 0510 50E0      		ldi r21,0
 883 0512 BA01      		movw r22,r20
 884 0514 00C0      		rjmp .L34
 885               	.LVL55:
 886               	.L1:
 887               	/* epilogue start */
 112:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 888               		.loc 1 112 0
 889 0516 DF91      		pop r29
 890 0518 CF91      		pop r28
 891 051a 1F91      		pop r17
 892 051c 0F91      		pop r16
 893 051e 0895      		ret
 894               		.cfi_endproc
 895               	.LFE99:
 897               		.section	.text.RNDIS_Device_ConfigureEndpoints,"ax",@progbits
 898               	.global	RNDIS_Device_ConfigureEndpoints
 900               	RNDIS_Device_ConfigureEndpoints:
 901               	.LFB100:
 115:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 902               		.loc 1 115 0
 903               		.cfi_startproc
 904               	.LVL56:
 905 0000 1F93      		push r17
 906               	.LCFI4:
 907               		.cfi_def_cfa_offset 3
 908               		.cfi_offset 17, -2
 909 0002 CF93      		push r28
 910               	.LCFI5:
 911               		.cfi_def_cfa_offset 4
 912               		.cfi_offset 28, -3
 913 0004 DF93      		push r29
 914               	.LCFI6:
 915               		.cfi_def_cfa_offset 5
 916               		.cfi_offset 29, -4
 917               	/* prologue: function */
 918               	/* frame size = 0 */
 919               	/* stack size = 3 */
 920               	.L__stack_usage = 3
 921 0006 EC01      		movw r28,r24
 116:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	memset(&RNDISInterfaceInfo->State, 0x00, sizeof(RNDISInterfaceInfo->State));
 922               		.loc 1 116 0
 923 0008 4596      		adiw r24,21
 924               	.LVL57:
 925 000a FC01      		movw r30,r24
 926 000c 86E8      		ldi r24,lo8(-122)
 927 000e DF01      		movw r26,r30
 928               		0:
 929 0010 1D92      		st X+,__zero_reg__
 930 0012 8A95      		dec r24
 931 0014 01F4      		brne 0b
 932               	.LVL58:
 118:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	for (uint8_t EndpointNum = 1; EndpointNum < ENDPOINT_TOTAL_ENDPOINTS; EndpointNum++)
 933               		.loc 1 118 0
 934 0016 11E0      		ldi r17,lo8(1)
 935               	.LVL59:
 936               	.L59:
 937               	.LBB85:
 938               	.LBB86:
 125:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		if (EndpointNum == RNDISInterfaceInfo->Config.DataINEndpointNumber)
 939               		.loc 1 125 0
 940 0018 8981      		ldd r24,Y+1
 941 001a 1813      		cpse r17,r24
 942 001c 00C0      		rjmp .L55
 127:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Size         = RNDISInterfaceInfo->Config.DataINEndpointSize;
 943               		.loc 1 127 0
 944 001e 2A81      		ldd r18,Y+2
 945 0020 3B81      		ldd r19,Y+3
 946               	.LVL60:
 130:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.DataINEndpointDoubleBank;
 947               		.loc 1 130 0
 948 0022 4C81      		ldd r20,Y+4
 949               	.LVL61:
 128:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Direction    = ENDPOINT_DIR_IN;
 950               		.loc 1 128 0
 951 0024 80E8      		ldi r24,lo8(-128)
 952 0026 00C0      		rjmp .L68
 953               	.LVL62:
 954               	.L55:
 132:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		else if (EndpointNum == RNDISInterfaceInfo->Config.DataOUTEndpointNumber)
 955               		.loc 1 132 0
 956 0028 8D81      		ldd r24,Y+5
 957 002a 1813      		cpse r17,r24
 958 002c 00C0      		rjmp .L57
 134:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Size         = RNDISInterfaceInfo->Config.DataOUTEndpointSize;
 959               		.loc 1 134 0
 960 002e 2E81      		ldd r18,Y+6
 961 0030 3F81      		ldd r19,Y+7
 962               	.LVL63:
 137:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.DataOUTEndpointDoubleBank;
 963               		.loc 1 137 0
 964 0032 4885      		ldd r20,Y+8
 965               	.LVL64:
 135:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Direction    = ENDPOINT_DIR_OUT;
 966               		.loc 1 135 0
 967 0034 80E0      		ldi r24,0
 968               	.LVL65:
 969               	.L68:
 136:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Type         = EP_TYPE_BULK;
 970               		.loc 1 136 0
 971 0036 92E0      		ldi r25,lo8(2)
 972 0038 00C0      		rjmp .L56
 973               	.LVL66:
 974               	.L57:
 139:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		else if (EndpointNum == RNDISInterfaceInfo->Config.NotificationEndpointNumber)
 975               		.loc 1 139 0
 976 003a 8985      		ldd r24,Y+9
 977 003c 1817      		cp r17,r24
 978 003e 01F0      		breq .L58
 979               	.L65:
 980               	.LBE86:
 118:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	for (uint8_t EndpointNum = 1; EndpointNum < ENDPOINT_TOTAL_ENDPOINTS; EndpointNum++)
 981               		.loc 1 118 0
 982 0040 1F5F      		subi r17,lo8(-(1))
 983               	.LVL67:
 984 0042 1730      		cpi r17,lo8(7)
 985 0044 01F4      		brne .L59
 158:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	return true;
 986               		.loc 1 158 0
 987 0046 81E0      		ldi r24,lo8(1)
 988 0048 00C0      		rjmp .L60
 989               	.LVL68:
 990               	.L58:
 991               	.LBB93:
 141:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Size         = RNDISInterfaceInfo->Config.NotificationEndpointSize;
 992               		.loc 1 141 0
 993 004a 2A85      		ldd r18,Y+10
 994 004c 3B85      		ldd r19,Y+11
 995               	.LVL69:
 144:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.NotificationEndpointDoubleBank;
 996               		.loc 1 144 0
 997 004e 4C85      		ldd r20,Y+12
 998               	.LVL70:
 142:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Direction    = ENDPOINT_DIR_IN;
 999               		.loc 1 142 0
 1000 0050 80E8      		ldi r24,lo8(-128)
 143:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Type         = EP_TYPE_INTERRUPT;
 1001               		.loc 1 143 0
 1002 0052 93E0      		ldi r25,lo8(3)
 1003               	.LVL71:
 1004               	.L56:
 151:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		if (!(Endpoint_ConfigureEndpoint(EndpointNum, Type, Direction, Size,
 1005               		.loc 1 151 0
 1006 0054 4423      		tst r20
 1007 0056 01F0      		breq .L66
 1008 0058 44E0      		ldi r20,lo8(4)
 1009               	.LVL72:
 1010 005a 00C0      		rjmp .L61
 1011               	.LVL73:
 1012               	.L66:
 1013 005c 40E0      		ldi r20,0
 1014               	.LVL74:
 1015               	.L61:
 127:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 1016               		.loc 2 127 0 discriminator 3
 1017 005e E8E0      		ldi r30,lo8(8)
 1018 0060 F0E0      		ldi r31,0
 126:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
 1019               		.loc 2 126 0 discriminator 3
 1020 0062 50E0      		ldi r21,0
 1021 0064 00C0      		rjmp .L62
 1022               	.LVL75:
 1023               	.L63:
 1024               	.LBB87:
 1025               	.LBB88:
 1026               	.LBB89:
 1027               	.LBB90:
 131:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 1028               		.loc 2 131 0
 1029 0066 5F5F      		subi r21,lo8(-(1))
 1030               	.LVL76:
 132:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 1031               		.loc 2 132 0
 1032 0068 EE0F      		lsl r30
 1033 006a FF1F      		rol r31
 1034               	.LVL77:
 1035               	.L62:
 129:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 1036               		.loc 2 129 0
 1037 006c E217      		cp r30,r18
 1038 006e F307      		cpc r31,r19
 1039 0070 00F0      		brlo .L63
 1040               	.LBE90:
 1041               	.LBE89:
 280:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, ((Type << EPTYPE0) | (Direction ? (1 << EPDIR) : 
 1042               		.loc 2 280 0
 1043 0072 4260      		ori r20,lo8(2)
 1044               	.LVL78:
 1045               	.LBB92:
 1046               	.LBB91:
 135:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 1047               		.loc 2 135 0
 1048 0074 5295      		swap r21
 1049               	.LVL79:
 1050 0076 507F      		andi r21,lo8(-16)
 1051               	.LBE91:
 1052               	.LBE92:
 280:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, ((Type << EPTYPE0) | (Direction ? (1 << EPDIR) : 
 1053               		.loc 2 280 0
 1054 0078 452B      		or r20,r21
 1055 007a B0E4      		ldi r27,lo8(64)
 1056 007c 9B9F      		mul r25,r27
 1057 007e 9001      		movw r18,r0
 1058 0080 1124      		clr __zero_reg__
 1059               	.LVL80:
 1060 0082 61E0      		ldi r22,lo8(1)
 1061 0084 8111      		cpse r24,__zero_reg__
 1062 0086 00C0      		rjmp .L64
 1063 0088 60E0      		ldi r22,0
 1064               	.L64:
 1065 008a 622B      		or r22,r18
 1066 008c 812F      		mov r24,r17
 1067               	.LVL81:
 1068 008e 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 1069               	.LVL82:
 1070               	.LBE88:
 1071               	.LBE87:
 151:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		if (!(Endpoint_ConfigureEndpoint(EndpointNum, Type, Direction, Size,
 1072               		.loc 1 151 0
 1073 0092 8111      		cpse r24,__zero_reg__
 1074 0094 00C0      		rjmp .L65
 1075               	.LVL83:
 1076               	.L60:
 1077               	/* epilogue start */
 1078               	.LBE93:
 1079               	.LBE85:
 159:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 1080               		.loc 1 159 0
 1081 0096 DF91      		pop r29
 1082 0098 CF91      		pop r28
 1083               	.LVL84:
 1084 009a 1F91      		pop r17
 1085 009c 0895      		ret
 1086               		.cfi_endproc
 1087               	.LFE100:
 1089               		.section	.rodata
 1090               	.LC0:
 1091 0000 A1        		.byte	-95
 1092 0001 01        		.byte	1
 1093 0002 0000      		.word	0
 1094 0004 0000      		.word	0
 1095 0006 0000      		.word	0
 1096               		.section	.text.RNDIS_Device_USBTask,"ax",@progbits
 1097               	.global	RNDIS_Device_USBTask
 1099               	RNDIS_Device_USBTask:
 1100               	.LFB101:
 162:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 1101               		.loc 1 162 0
 1102               		.cfi_startproc
 1103               	.LVL85:
 1104 0000 0F93      		push r16
 1105               	.LCFI7:
 1106               		.cfi_def_cfa_offset 3
 1107               		.cfi_offset 16, -2
 1108 0002 1F93      		push r17
 1109               	.LCFI8:
 1110               		.cfi_def_cfa_offset 4
 1111               		.cfi_offset 17, -3
 1112 0004 CF93      		push r28
 1113               	.LCFI9:
 1114               		.cfi_def_cfa_offset 5
 1115               		.cfi_offset 28, -4
 1116 0006 DF93      		push r29
 1117               	.LCFI10:
 1118               		.cfi_def_cfa_offset 6
 1119               		.cfi_offset 29, -5
 1120 0008 CDB7      		in r28,__SP_L__
 1121 000a DEB7      		in r29,__SP_H__
 1122               	.LCFI11:
 1123               		.cfi_def_cfa_register 28
 1124 000c 2897      		sbiw r28,8
 1125               	.LCFI12:
 1126               		.cfi_def_cfa_offset 14
 1127 000e 0FB6      		in __tmp_reg__,__SREG__
 1128 0010 F894      		cli
 1129 0012 DEBF      		out __SP_H__,r29
 1130 0014 0FBE      		out __SREG__,__tmp_reg__
 1131 0016 CDBF      		out __SP_L__,r28
 1132               	/* prologue: function */
 1133               	/* frame size = 8 */
 1134               	/* stack size = 12 */
 1135               	.L__stack_usage = 12
 163:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 1136               		.loc 1 163 0
 1137 0018 2EB3      		in r18,0x1e
 1138 001a 2430      		cpi r18,lo8(4)
 1139 001c 01F4      		brne .L69
 166:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.NotificationEndpointNumber);
 1140               		.loc 1 166 0
 1141 001e FC01      		movw r30,r24
 1142 0020 2185      		ldd r18,Z+9
 1143               	.LVL86:
 1144               	.LBB94:
 1145               	.LBB95:
 334:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 1146               		.loc 2 334 0
 1147 0022 2093 E900 		sts 233,r18
 1148               	.LBE95:
 1149               	.LBE94:
 1150               	.LBB96:
 1151               	.LBB97:
 471:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 1152               		.loc 2 471 0
 1153 0026 2091 E800 		lds r18,232
 1154               	.LVL87:
 1155               	.LBE97:
 1156               	.LBE96:
 168:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.ResponseReady)
 1157               		.loc 1 168 0
 1158 002a 20FF      		sbrs r18,0
 1159 002c 00C0      		rjmp .L69
 168:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.ResponseReady)
 1160               		.loc 1 168 0 is_stmt 0 discriminator 1
 1161 002e 8C01      		movw r16,r24
 1162 0030 0B56      		subi r16,107
 1163 0032 1F4F      		sbci r17,-1
 1164 0034 F801      		movw r30,r16
 1165 0036 8081      		ld r24,Z
 1166               	.LVL88:
 1167 0038 8823      		tst r24
 1168 003a 01F0      		breq .L69
 1169               	.LBB98:
 170:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		USB_Request_Header_t Notification = (USB_Request_Header_t)
 1170               		.loc 1 170 0 is_stmt 1
 1171 003c 88E0      		ldi r24,lo8(8)
 1172 003e E0E0      		ldi r30,lo8(.LC0)
 1173 0040 F0E0      		ldi r31,hi8(.LC0)
 1174 0042 DE01      		movw r26,r28
 1175 0044 1196      		adiw r26,1
 1176               		0:
 1177 0046 0190      		ld r0,Z+
 1178 0048 0D92      		st X+,r0
 1179 004a 8A95      		dec r24
 1180 004c 01F4      		brne 0b
 179:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		Endpoint_Write_Stream_LE(&Notification, sizeof(USB_Request_Header_t), NULL);
 1181               		.loc 1 179 0
 1182 004e 40E0      		ldi r20,0
 1183 0050 50E0      		ldi r21,0
 1184 0052 68E0      		ldi r22,lo8(8)
 1185 0054 70E0      		ldi r23,0
 1186 0056 CE01      		movw r24,r28
 1187 0058 0196      		adiw r24,1
 1188 005a 0E94 0000 		call Endpoint_Write_Stream_LE
 1189               	.LVL89:
 1190               	.LBB99:
 1191               	.LBB100:
 520:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1192               		.loc 2 520 0
 1193 005e 8091 E800 		lds r24,232
 1194 0062 8E77      		andi r24,lo8(126)
 1195 0064 8093 E800 		sts 232,r24
 1196               	.LBE100:
 1197               	.LBE99:
 183:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		RNDISInterfaceInfo->State.ResponseReady = false;
 1198               		.loc 1 183 0
 1199 0068 F801      		movw r30,r16
 1200 006a 1082      		st Z,__zero_reg__
 1201               	.LVL90:
 1202               	.L69:
 1203               	/* epilogue start */
 1204               	.LBE98:
 185:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 1205               		.loc 1 185 0
 1206 006c 2896      		adiw r28,8
 1207 006e 0FB6      		in __tmp_reg__,__SREG__
 1208 0070 F894      		cli
 1209 0072 DEBF      		out __SP_H__,r29
 1210 0074 0FBE      		out __SREG__,__tmp_reg__
 1211 0076 CDBF      		out __SP_L__,r28
 1212 0078 DF91      		pop r29
 1213 007a CF91      		pop r28
 1214 007c 1F91      		pop r17
 1215 007e 0F91      		pop r16
 1216 0080 0895      		ret
 1217               		.cfi_endproc
 1218               	.LFE101:
 1220               		.section	.text.RNDIS_Device_IsPacketReceived,"ax",@progbits
 1221               	.global	RNDIS_Device_IsPacketReceived
 1223               	RNDIS_Device_IsPacketReceived:
 1224               	.LFB105:
 437:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                         RNDIS_Data_Initialized : RNDIS_Data_Ini
 438:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 439:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 440:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_MULTICAST_LIST:
 441:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Do nothing - throw away the value from the host as it is unused */
 442:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 443:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 444:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		default:
 445:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return false;
 446:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 447:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 448:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 449:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** bool RNDIS_Device_IsPacketReceived(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
 450:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 1225               		.loc 1 450 0
 1226               		.cfi_startproc
 1227               	.LVL91:
 1228               	/* prologue: function */
 1229               	/* frame size = 0 */
 1230               	/* stack size = 0 */
 1231               	.L__stack_usage = 0
 451:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1232               		.loc 1 451 0
 1233 0000 2EB3      		in r18,0x1e
 1234 0002 2430      		cpi r18,lo8(4)
 1235 0004 01F4      		brne .L82
 452:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	    (RNDISInterfaceInfo->State.CurrRNDISState != RNDIS_Data_Initialized))
 1236               		.loc 1 452 0 discriminator 1
 1237 0006 FC01      		movw r30,r24
 1238 0008 EA56      		subi r30,106
 1239 000a FF4F      		sbci r31,-1
 451:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1240               		.loc 1 451 0 discriminator 1
 1241 000c 2081      		ld r18,Z
 1242 000e 2230      		cpi r18,lo8(2)
 1243 0010 01F4      		brne .L82
 453:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 454:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return false;
 455:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 456:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 457:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataOUTEndpointNumber);
 1244               		.loc 1 457 0
 1245 0012 FC01      		movw r30,r24
 1246 0014 8581      		ldd r24,Z+5
 1247               	.LVL92:
 1248               	.LBB101:
 1249               	.LBB102:
 334:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 1250               		.loc 2 334 0
 1251 0016 8093 E900 		sts 233,r24
 1252               	.LBE102:
 1253               	.LBE101:
 1254               	.LBB103:
 1255               	.LBB104:
 483:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 1256               		.loc 2 483 0
 1257 001a 8091 E800 		lds r24,232
 1258               	.LVL93:
 1259 001e 82FB      		bst r24,2
 1260 0020 8827      		clr r24
 1261 0022 80F9      		bld r24,0
 1262               	.LBE104:
 1263               	.LBE103:
 458:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	return Endpoint_IsOUTReceived();
 1264               		.loc 1 458 0
 1265 0024 0895      		ret
 1266               	.LVL94:
 1267               	.L82:
 454:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return false;
 1268               		.loc 1 454 0
 1269 0026 80E0      		ldi r24,0
 1270               	.LVL95:
 459:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 1271               		.loc 1 459 0
 1272 0028 0895      		ret
 1273               		.cfi_endproc
 1274               	.LFE105:
 1276               		.section	.text.RNDIS_Device_ReadPacket,"ax",@progbits
 1277               	.global	RNDIS_Device_ReadPacket
 1279               	RNDIS_Device_ReadPacket:
 1280               	.LFB106:
 460:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 461:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** uint8_t RNDIS_Device_ReadPacket(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 462:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                 void* Buffer,
 463:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                 uint16_t* const PacketLength)
 464:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 1281               		.loc 1 464 0
 1282               		.cfi_startproc
 1283               	.LVL96:
 1284 0000 EF92      		push r14
 1285               	.LCFI13:
 1286               		.cfi_def_cfa_offset 3
 1287               		.cfi_offset 14, -2
 1288 0002 FF92      		push r15
 1289               	.LCFI14:
 1290               		.cfi_def_cfa_offset 4
 1291               		.cfi_offset 15, -3
 1292 0004 0F93      		push r16
 1293               	.LCFI15:
 1294               		.cfi_def_cfa_offset 5
 1295               		.cfi_offset 16, -4
 1296 0006 1F93      		push r17
 1297               	.LCFI16:
 1298               		.cfi_def_cfa_offset 6
 1299               		.cfi_offset 17, -5
 1300 0008 CF93      		push r28
 1301               	.LCFI17:
 1302               		.cfi_def_cfa_offset 7
 1303               		.cfi_offset 28, -6
 1304 000a DF93      		push r29
 1305               	.LCFI18:
 1306               		.cfi_def_cfa_offset 8
 1307               		.cfi_offset 29, -7
 1308 000c CDB7      		in r28,__SP_L__
 1309 000e DEB7      		in r29,__SP_H__
 1310               	.LCFI19:
 1311               		.cfi_def_cfa_register 28
 1312 0010 AC97      		sbiw r28,44
 1313               	.LCFI20:
 1314               		.cfi_def_cfa_offset 52
 1315 0012 0FB6      		in __tmp_reg__,__SREG__
 1316 0014 F894      		cli
 1317 0016 DEBF      		out __SP_H__,r29
 1318 0018 0FBE      		out __SREG__,__tmp_reg__
 1319 001a CDBF      		out __SP_L__,r28
 1320               	/* prologue: function */
 1321               	/* frame size = 44 */
 1322               	/* stack size = 50 */
 1323               	.L__stack_usage = 50
 1324 001c FC01      		movw r30,r24
 1325 001e 7B01      		movw r14,r22
 1326 0020 8A01      		movw r16,r20
 465:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1327               		.loc 1 465 0
 1328 0022 8EB3      		in r24,0x1e
 1329               	.LVL97:
 1330 0024 8430      		cpi r24,lo8(4)
 1331 0026 01F4      		brne .L87
 466:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	    (RNDISInterfaceInfo->State.CurrRNDISState != RNDIS_Data_Initialized))
 1332               		.loc 1 466 0 discriminator 1
 1333 0028 DF01      		movw r26,r30
 1334 002a AA56      		subi r26,106
 1335 002c BF4F      		sbci r27,-1
 465:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1336               		.loc 1 465 0 discriminator 1
 1337 002e 8C91      		ld r24,X
 1338 0030 8230      		cpi r24,lo8(2)
 1339 0032 01F4      		brne .L87
 467:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 468:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return ENDPOINT_RWSTREAM_DeviceDisconnected;
 469:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 470:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 471:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataOUTEndpointNumber);
 1340               		.loc 1 471 0
 1341 0034 8581      		ldd r24,Z+5
 1342               	.LVL98:
 1343               	.LBB105:
 1344               	.LBB106:
 334:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 1345               		.loc 2 334 0
 1346 0036 8093 E900 		sts 233,r24
 1347               	.LBE106:
 1348               	.LBE105:
 472:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 473:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	*PacketLength = 0;
 1349               		.loc 1 473 0
 1350 003a FA01      		movw r30,r20
 1351               	.LVL99:
 1352 003c 1182      		std Z+1,__zero_reg__
 1353 003e 1082      		st Z,__zero_reg__
 1354               	.LBB107:
 1355               	.LBB108:
 483:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 1356               		.loc 2 483 0
 1357 0040 8091 E800 		lds r24,232
 1358               	.LVL100:
 1359               	.LBE108:
 1360               	.LBE107:
 474:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 475:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (!(Endpoint_IsOUTReceived()))
 1361               		.loc 1 475 0
 1362 0044 82FF      		sbrs r24,2
 1363 0046 00C0      		rjmp .L88
 476:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return ENDPOINT_RWSTREAM_NoError;
 477:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 478:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDIS_Packet_Message_t RNDISPacketHeader;
 479:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_Read_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NULL);
 1364               		.loc 1 479 0
 1365 0048 40E0      		ldi r20,0
 1366 004a 50E0      		ldi r21,0
 1367               	.LVL101:
 1368 004c 6CE2      		ldi r22,lo8(44)
 1369 004e 70E0      		ldi r23,0
 1370               	.LVL102:
 1371 0050 CE01      		movw r24,r28
 1372 0052 0196      		adiw r24,1
 1373 0054 0E94 0000 		call Endpoint_Read_Stream_LE
 1374               	.LVL103:
 480:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 481:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (le32_to_cpu(RNDISPacketHeader.DataLength) > ETHERNET_FRAME_SIZE_MAX)
 1375               		.loc 1 481 0
 1376 0058 6D85      		ldd r22,Y+13
 1377 005a 7E85      		ldd r23,Y+14
 1378 005c 8F85      		ldd r24,Y+15
 1379 005e 9889      		ldd r25,Y+16
 1380 0060 6D3D      		cpi r22,-35
 1381 0062 F5E0      		ldi r31,5
 1382 0064 7F07      		cpc r23,r31
 1383 0066 8105      		cpc r24,__zero_reg__
 1384 0068 9105      		cpc r25,__zero_reg__
 1385 006a 00F0      		brlo .L85
 1386               	.LBB109:
 1387               	.LBB110:
 536:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 537:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 538:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 539:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 540:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 541:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 542:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 543:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 544:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 545:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 546:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 547:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 548:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 549:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 550:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 551:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 552:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 553:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 554:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 555:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 1388               		.loc 2 555 0
 1389 006c 8091 EB00 		lds r24,235
 1390 0070 8062      		ori r24,lo8(32)
 1391 0072 8093 EB00 		sts 235,r24
 482:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 483:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		Endpoint_StallTransaction();
 484:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 485:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return RNDIS_ERROR_LOGICAL_CMD_FAILED;
 1392               		.loc 1 485 0
 1393 0076 80E8      		ldi r24,lo8(-128)
 1394 0078 00C0      		rjmp .L84
 1395               	.L85:
 1396               	.LBE110:
 1397               	.LBE109:
 486:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 487:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 488:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	*PacketLength = (uint16_t)le32_to_cpu(RNDISPacketHeader.DataLength);
 1398               		.loc 1 488 0
 1399 007a F801      		movw r30,r16
 1400 007c 7183      		std Z+1,r23
 1401 007e 6083      		st Z,r22
 489:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 490:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_Read_Stream_LE(Buffer, *PacketLength, NULL);
 1402               		.loc 1 490 0
 1403 0080 40E0      		ldi r20,0
 1404 0082 50E0      		ldi r21,0
 1405 0084 C701      		movw r24,r14
 1406 0086 0E94 0000 		call Endpoint_Read_Stream_LE
 1407               	.LVL104:
 1408               	.LBB111:
 1409               	.LBB112:
 535:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 1410               		.loc 2 535 0
 1411 008a 8091 E800 		lds r24,232
 1412 008e 8B77      		andi r24,lo8(123)
 1413 0090 8093 E800 		sts 232,r24
 1414 0094 00C0      		rjmp .L88
 1415               	.LVL105:
 1416               	.L87:
 1417               	.LBE112:
 1418               	.LBE111:
 468:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return ENDPOINT_RWSTREAM_DeviceDisconnected;
 1419               		.loc 1 468 0
 1420 0096 82E0      		ldi r24,lo8(2)
 1421 0098 00C0      		rjmp .L84
 1422               	.LVL106:
 1423               	.L88:
 476:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return ENDPOINT_RWSTREAM_NoError;
 1424               		.loc 1 476 0
 1425 009a 80E0      		ldi r24,0
 1426               	.L84:
 1427               	/* epilogue start */
 491:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_ClearOUT();
 492:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 493:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	return ENDPOINT_RWSTREAM_NoError;
 494:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 1428               		.loc 1 494 0
 1429 009c AC96      		adiw r28,44
 1430 009e 0FB6      		in __tmp_reg__,__SREG__
 1431 00a0 F894      		cli
 1432 00a2 DEBF      		out __SP_H__,r29
 1433 00a4 0FBE      		out __SREG__,__tmp_reg__
 1434 00a6 CDBF      		out __SP_L__,r28
 1435 00a8 DF91      		pop r29
 1436 00aa CF91      		pop r28
 1437 00ac 1F91      		pop r17
 1438 00ae 0F91      		pop r16
 1439               	.LVL107:
 1440 00b0 FF90      		pop r15
 1441 00b2 EF90      		pop r14
 1442               	.LVL108:
 1443 00b4 0895      		ret
 1444               		.cfi_endproc
 1445               	.LFE106:
 1447               		.section	.text.RNDIS_Device_SendPacket,"ax",@progbits
 1448               	.global	RNDIS_Device_SendPacket
 1450               	RNDIS_Device_SendPacket:
 1451               	.LFB107:
 495:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 496:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** uint8_t RNDIS_Device_SendPacket(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 497:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                 void* Buffer,
 498:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                 const uint16_t PacketLength)
 499:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 1452               		.loc 1 499 0
 1453               		.cfi_startproc
 1454               	.LVL109:
 1455 0000 AF92      		push r10
 1456               	.LCFI21:
 1457               		.cfi_def_cfa_offset 3
 1458               		.cfi_offset 10, -2
 1459 0002 BF92      		push r11
 1460               	.LCFI22:
 1461               		.cfi_def_cfa_offset 4
 1462               		.cfi_offset 11, -3
 1463 0004 DF92      		push r13
 1464               	.LCFI23:
 1465               		.cfi_def_cfa_offset 5
 1466               		.cfi_offset 13, -4
 1467 0006 EF92      		push r14
 1468               	.LCFI24:
 1469               		.cfi_def_cfa_offset 6
 1470               		.cfi_offset 14, -5
 1471 0008 FF92      		push r15
 1472               	.LCFI25:
 1473               		.cfi_def_cfa_offset 7
 1474               		.cfi_offset 15, -6
 1475 000a 0F93      		push r16
 1476               	.LCFI26:
 1477               		.cfi_def_cfa_offset 8
 1478               		.cfi_offset 16, -7
 1479 000c 1F93      		push r17
 1480               	.LCFI27:
 1481               		.cfi_def_cfa_offset 9
 1482               		.cfi_offset 17, -8
 1483 000e CF93      		push r28
 1484               	.LCFI28:
 1485               		.cfi_def_cfa_offset 10
 1486               		.cfi_offset 28, -9
 1487 0010 DF93      		push r29
 1488               	.LCFI29:
 1489               		.cfi_def_cfa_offset 11
 1490               		.cfi_offset 29, -10
 1491 0012 CDB7      		in r28,__SP_L__
 1492 0014 DEB7      		in r29,__SP_H__
 1493               	.LCFI30:
 1494               		.cfi_def_cfa_register 28
 1495 0016 AC97      		sbiw r28,44
 1496               	.LCFI31:
 1497               		.cfi_def_cfa_offset 55
 1498 0018 0FB6      		in __tmp_reg__,__SREG__
 1499 001a F894      		cli
 1500 001c DEBF      		out __SP_H__,r29
 1501 001e 0FBE      		out __SREG__,__tmp_reg__
 1502 0020 CDBF      		out __SP_L__,r28
 1503               	/* prologue: function */
 1504               	/* frame size = 44 */
 1505               	/* stack size = 53 */
 1506               	.L__stack_usage = 53
 1507 0022 FC01      		movw r30,r24
 1508 0024 5B01      		movw r10,r22
 1509 0026 7A01      		movw r14,r20
 500:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	uint8_t ErrorCode;
 501:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 502:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1510               		.loc 1 502 0
 1511 0028 8EB3      		in r24,0x1e
 1512               	.LVL110:
 1513 002a 8430      		cpi r24,lo8(4)
 1514 002c 01F0      		breq .+2
 1515 002e 00C0      		rjmp .L92
 503:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	    (RNDISInterfaceInfo->State.CurrRNDISState != RNDIS_Data_Initialized))
 1516               		.loc 1 503 0 discriminator 1
 1517 0030 DF01      		movw r26,r30
 1518 0032 AA56      		subi r26,106
 1519 0034 BF4F      		sbci r27,-1
 502:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1520               		.loc 1 502 0 discriminator 1
 1521 0036 8C91      		ld r24,X
 1522 0038 8230      		cpi r24,lo8(2)
 1523 003a 01F0      		breq .+2
 1524 003c 00C0      		rjmp .L92
 504:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 505:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return ENDPOINT_RWSTREAM_DeviceDisconnected;
 506:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 507:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 508:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataINEndpointNumber);
 1525               		.loc 1 508 0
 1526 003e 8181      		ldd r24,Z+1
 1527               	.LVL111:
 1528               	.LBB113:
 1529               	.LBB114:
 334:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 1530               		.loc 2 334 0
 1531 0040 8093 E900 		sts 233,r24
 1532               	.LBE114:
 1533               	.LBE113:
 509:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 510:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((ErrorCode = Endpoint_WaitUntilReady()) != ENDPOINT_READYWAIT_NoError)
 1534               		.loc 1 510 0
 1535 0044 0E94 0000 		call Endpoint_WaitUntilReady
 1536               	.LVL112:
 1537 0048 D82E      		mov r13,r24
 1538               	.LVL113:
 1539 004a 8111      		cpse r24,__zero_reg__
 1540 004c 00C0      		rjmp .L90
 511:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return ErrorCode;
 512:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 513:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDIS_Packet_Message_t RNDISPacketHeader;
 514:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 515:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	memset(&RNDISPacketHeader, 0, sizeof(RNDIS_Packet_Message_t));
 1541               		.loc 1 515 0
 1542 004e FE01      		movw r30,r28
 1543 0050 3196      		adiw r30,1
 1544 0052 8CE2      		ldi r24,lo8(44)
 1545 0054 DF01      		movw r26,r30
 1546               		0:
 1547 0056 1D92      		st X+,__zero_reg__
 1548 0058 8A95      		dec r24
 1549 005a 01F4      		brne 0b
 516:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 517:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISPacketHeader.MessageType   = CPU_TO_LE32(REMOTE_NDIS_PACKET_MSG);
 1550               		.loc 1 517 0
 1551 005c 01E0      		ldi r16,lo8(1)
 1552 005e 10E0      		ldi r17,0
 1553 0060 20E0      		ldi r18,0
 1554 0062 30E0      		ldi r19,0
 1555 0064 0983      		std Y+1,r16
 1556 0066 1A83      		std Y+2,r17
 1557 0068 2B83      		std Y+3,r18
 1558 006a 3C83      		std Y+4,r19
 518:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISPacketHeader.MessageLength = cpu_to_le32(sizeof(RNDIS_Packet_Message_t) + PacketLength);
 1559               		.loc 1 518 0
 1560 006c 8701      		movw r16,r14
 1561 006e 045D      		subi r16,-44
 1562 0070 1F4F      		sbci r17,-1
 1563 0072 20E0      		ldi r18,0
 1564 0074 30E0      		ldi r19,0
 1565 0076 0D83      		std Y+5,r16
 1566 0078 1E83      		std Y+6,r17
 1567 007a 2F83      		std Y+7,r18
 1568 007c 3887      		std Y+8,r19
 519:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISPacketHeader.DataOffset    = CPU_TO_LE32(sizeof(RNDIS_Packet_Message_t) - sizeof(RNDIS_Messag
 1569               		.loc 1 519 0
 1570 007e 04E2      		ldi r16,lo8(36)
 1571 0080 10E0      		ldi r17,0
 1572 0082 20E0      		ldi r18,0
 1573 0084 30E0      		ldi r19,0
 1574 0086 0987      		std Y+9,r16
 1575 0088 1A87      		std Y+10,r17
 1576 008a 2B87      		std Y+11,r18
 1577 008c 3C87      		std Y+12,r19
 520:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISPacketHeader.DataLength    = cpu_to_le32(PacketLength);
 1578               		.loc 1 520 0
 1579 008e 8701      		movw r16,r14
 1580 0090 20E0      		ldi r18,0
 1581 0092 30E0      		ldi r19,0
 1582 0094 0D87      		std Y+13,r16
 1583 0096 1E87      		std Y+14,r17
 1584 0098 2F87      		std Y+15,r18
 1585 009a 388B      		std Y+16,r19
 521:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 522:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_Write_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NULL);
 1586               		.loc 1 522 0
 1587 009c 40E0      		ldi r20,0
 1588 009e 50E0      		ldi r21,0
 1589 00a0 6CE2      		ldi r22,lo8(44)
 1590 00a2 70E0      		ldi r23,0
 1591 00a4 CF01      		movw r24,r30
 1592 00a6 0E94 0000 		call Endpoint_Write_Stream_LE
 1593               	.LVL114:
 523:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_Write_Stream_LE(Buffer, PacketLength, NULL);
 1594               		.loc 1 523 0
 1595 00aa 40E0      		ldi r20,0
 1596 00ac 50E0      		ldi r21,0
 1597 00ae B701      		movw r22,r14
 1598 00b0 C501      		movw r24,r10
 1599 00b2 0E94 0000 		call Endpoint_Write_Stream_LE
 1600               	.LVL115:
 1601               	.LBB115:
 1602               	.LBB116:
 520:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1603               		.loc 2 520 0
 1604 00b6 8091 E800 		lds r24,232
 1605 00ba 8E77      		andi r24,lo8(126)
 1606 00bc 8093 E800 		sts 232,r24
 1607 00c0 00C0      		rjmp .L90
 1608               	.LVL116:
 1609               	.L92:
 1610               	.LBE116:
 1611               	.LBE115:
 505:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return ENDPOINT_RWSTREAM_DeviceDisconnected;
 1612               		.loc 1 505 0
 1613 00c2 72E0      		ldi r23,lo8(2)
 1614 00c4 D72E      		mov r13,r23
 1615               	.LVL117:
 1616               	.L90:
 524:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_ClearIN();
 525:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 526:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	return ENDPOINT_RWSTREAM_NoError;
 527:lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 1617               		.loc 1 527 0
 1618 00c6 8D2D      		mov r24,r13
 1619               	/* epilogue start */
 1620 00c8 AC96      		adiw r28,44
 1621 00ca 0FB6      		in __tmp_reg__,__SREG__
 1622 00cc F894      		cli
 1623 00ce DEBF      		out __SP_H__,r29
 1624 00d0 0FBE      		out __SREG__,__tmp_reg__
 1625 00d2 CDBF      		out __SP_L__,r28
 1626 00d4 DF91      		pop r29
 1627 00d6 CF91      		pop r28
 1628 00d8 1F91      		pop r17
 1629 00da 0F91      		pop r16
 1630 00dc FF90      		pop r15
 1631 00de EF90      		pop r14
 1632               	.LVL118:
 1633 00e0 DF90      		pop r13
 1634 00e2 BF90      		pop r11
 1635 00e4 AF90      		pop r10
 1636               	.LVL119:
 1637 00e6 0895      		ret
 1638               		.cfi_endproc
 1639               	.LFE107:
 1641               		.section	.progmem.data,"a",@progbits
 1644               	AdapterSupportedOIDList:
 1645 0000 01        		.byte	1
 1646 0001 01        		.byte	1
 1647 0002 01        		.byte	1
 1648 0003 00        		.byte	0
 1649 0004 02        		.byte	2
 1650 0005 02        		.byte	2
 1651 0006 01        		.byte	1
 1652 0007 00        		.byte	0
 1653 0008 02        		.byte	2
 1654 0009 01        		.byte	1
 1655 000a 01        		.byte	1
 1656 000b 00        		.byte	0
 1657 000c 03        		.byte	3
 1658 000d 01        		.byte	1
 1659 000e 01        		.byte	1
 1660 000f 00        		.byte	0
 1661 0010 04        		.byte	4
 1662 0011 01        		.byte	1
 1663 0012 01        		.byte	1
 1664 0013 00        		.byte	0
 1665 0014 06        		.byte	6
 1666 0015 01        		.byte	1
 1667 0016 01        		.byte	1
 1668 0017 00        		.byte	0
 1669 0018 11        		.byte	17
 1670 0019 01        		.byte	1
 1671 001a 01        		.byte	1
 1672 001b 00        		.byte	0
 1673 001c 07        		.byte	7
 1674 001d 01        		.byte	1
 1675 001e 01        		.byte	1
 1676 001f 00        		.byte	0
 1677 0020 0A        		.byte	10
 1678 0021 01        		.byte	1
 1679 0022 01        		.byte	1
 1680 0023 00        		.byte	0
 1681 0024 0B        		.byte	11
 1682 0025 01        		.byte	1
 1683 0026 01        		.byte	1
 1684 0027 00        		.byte	0
 1685 0028 0C        		.byte	12
 1686 0029 01        		.byte	1
 1687 002a 01        		.byte	1
 1688 002b 00        		.byte	0
 1689 002c 0D        		.byte	13
 1690 002d 01        		.byte	1
 1691 002e 01        		.byte	1
 1692 002f 00        		.byte	0
 1693 0030 0E        		.byte	14
 1694 0031 01        		.byte	1
 1695 0032 01        		.byte	1
 1696 0033 00        		.byte	0
 1697 0034 11        		.byte	17
 1698 0035 01        		.byte	1
 1699 0036 01        		.byte	1
 1700 0037 00        		.byte	0
 1701 0038 14        		.byte	20
 1702 0039 01        		.byte	1
 1703 003a 01        		.byte	1
 1704 003b 00        		.byte	0
 1705 003c 01        		.byte	1
 1706 003d 01        		.byte	1
 1707 003e 02        		.byte	2
 1708 003f 00        		.byte	0
 1709 0040 02        		.byte	2
 1710 0041 01        		.byte	1
 1711 0042 02        		.byte	2
 1712 0043 00        		.byte	0
 1713 0044 03        		.byte	3
 1714 0045 01        		.byte	1
 1715 0046 02        		.byte	2
 1716 0047 00        		.byte	0
 1717 0048 04        		.byte	4
 1718 0049 01        		.byte	1
 1719 004a 02        		.byte	2
 1720 004b 00        		.byte	0
 1721 004c 05        		.byte	5
 1722 004d 01        		.byte	1
 1723 004e 02        		.byte	2
 1724 004f 00        		.byte	0
 1725 0050 01        		.byte	1
 1726 0051 01        		.byte	1
 1727 0052 01        		.byte	1
 1728 0053 01        		.byte	1
 1729 0054 02        		.byte	2
 1730 0055 01        		.byte	1
 1731 0056 01        		.byte	1
 1732 0057 01        		.byte	1
 1733 0058 03        		.byte	3
 1734 0059 01        		.byte	1
 1735 005a 01        		.byte	1
 1736 005b 01        		.byte	1
 1737 005c 04        		.byte	4
 1738 005d 01        		.byte	1
 1739 005e 01        		.byte	1
 1740 005f 01        		.byte	1
 1741 0060 01        		.byte	1
 1742 0061 01        		.byte	1
 1743 0062 02        		.byte	2
 1744 0063 01        		.byte	1
 1745 0064 02        		.byte	2
 1746 0065 01        		.byte	1
 1747 0066 02        		.byte	2
 1748 0067 01        		.byte	1
 1749 0068 03        		.byte	3
 1750 0069 01        		.byte	1
 1751 006a 02        		.byte	2
 1752 006b 01        		.byte	1
 1753               		.text
 1754               	.Letext0:
 1755               		.file 3 "/usr/lib/gcc/avr/4.7.0/../../../../avr/include/stdint.h"
 1756               		.file 4 "/usr/lib/gcc/avr/4.7.0/include/stddef.h"
 1757               		.file 5 "lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../Device.h"
 1758               		.file 6 "lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../StdRequestType.h"
 1759               		.file 7 "lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../EndpointStream.h"
 1760               		.file 8 "lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../Common/RNDISClassCommon.h"
 1761               		.file 9 "lufa-lib-svn/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.h"
 1762               		.file 10 "/usr/lib/gcc/avr/4.7.0/../../../../avr/include/avr/pgmspace.h"
 1763               		.file 11 "lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/EndpointStream_AVR8.h
 1764               		.file 12 "lufa-lib-svn/LUFA/Drivers/USB/Class/Device/../../Core/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:00000000 RNDISClassDevice.c
     /tmp/ccHo8SQx.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccHo8SQx.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccHo8SQx.s:4      *ABS*:0000003f __SREG__
     /tmp/ccHo8SQx.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccHo8SQx.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccHo8SQx.s:13     .text.RNDIS_Device_ProcessControlRequest:00000000 RNDIS_Device_ProcessControlRequest
     /tmp/ccHo8SQx.s:1644   .progmem.data:00000000 AdapterSupportedOIDList
     /tmp/ccHo8SQx.s:900    .text.RNDIS_Device_ConfigureEndpoints:00000000 RNDIS_Device_ConfigureEndpoints
     /tmp/ccHo8SQx.s:1099   .text.RNDIS_Device_USBTask:00000000 RNDIS_Device_USBTask
     /tmp/ccHo8SQx.s:1223   .text.RNDIS_Device_IsPacketReceived:00000000 RNDIS_Device_IsPacketReceived
     /tmp/ccHo8SQx.s:1279   .text.RNDIS_Device_ReadPacket:00000000 RNDIS_Device_ReadPacket
     /tmp/ccHo8SQx.s:1450   .text.RNDIS_Device_SendPacket:00000000 RNDIS_Device_SendPacket

UNDEFINED SYMBOLS
USB_ControlRequest
Endpoint_Read_Control_Stream_LE
memcpy_P
memcpy
Endpoint_Write_Control_Stream_LE
Endpoint_ConfigureEndpoint_Prv
Endpoint_Write_Stream_LE
Endpoint_Read_Stream_LE
Endpoint_WaitUntilReady
__do_copy_data
